{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import{fileSystemService,authService}from'../api';import{FaFolder,FaFile,FaArrowUp,FaPlus,FaTrash,FaEdit,FaPen,FaSave,FaMicrophone,FaCheck,FaSun,FaMoon}from'react-icons/fa';import'./FileExplorer.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FileExplorer=()=>{const[files,setFiles]=useState([]);const[currentDir,setCurrentDir]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[showCreateFolder,setShowCreateFolder]=useState(false);const[showCreateFile,setShowCreateFile]=useState(false);const[newFolderName,setNewFolderName]=useState('');const[newFileName,setNewFileName]=useState('');const[newFileContent,setNewFileContent]=useState('');const[selectedFile,setSelectedFile]=useState(null);const[fileContent,setFileContent]=useState('');const[editMode,setEditMode]=useState(false);const[voiceActive,setVoiceActive]=useState(false);const[voiceText,setVoiceText]=useState('');const[recognitionInterval,setRecognitionInterval]=useState(null);const[successNotification,setSuccessNotification]=useState(null);const[darkMode,setDarkMode]=useState(false);const navigate=useNavigate();const fetchFiles=async()=>{try{setLoading(true);setError('');// Fetch current directory first\nconsole.log('Fetching current directory...');const dirResponse=await fileSystemService.getCurrentDirectory();console.log('Current directory response:',dirResponse);if(dirResponse.data){setCurrentDir(dirResponse.data);console.log('Current directory set to:',dirResponse.data);}else{console.warn('Unexpected current directory response format:',dirResponse);}// Then fetch files in that directory\nconsole.log('Fetching files in directory...');const response=await fileSystemService.listFiles();console.log('List files raw response:',response);// Check if the response has an items property\nif(response.data&&response.data.items){console.log('Files list received:',response.data.items);setFiles(response.data.items);}else{// Try to parse the response if it's a string\ntry{if(typeof response.data==='string'){const parsedData=JSON.parse(response.data);if(parsedData.items){console.log('Files list parsed from string:',parsedData.items);setFiles(parsedData.items);return;}}}catch(parseErr){console.error('Failed to parse response data:',parseErr);}// Handle the case when the response doesn't have the expected format\nconsole.error('Unexpected response format:',response.data);setFiles([]);setError('Unexpected response format from server');}}catch(err){var _err$response,_err$response2;console.error('Error fetching files:',err);setError('Failed to load files: '+(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||err.message));if(((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.status)===401){// Handle unauthorized\nconsole.warn('Unauthorized access detected, logging out...');handleLogout();}}finally{setLoading(false);}};useEffect(()=>{fetchFiles();// Set up initial theme based on local storage\nconst savedTheme=localStorage.getItem('darkMode');if(savedTheme==='true'){setDarkMode(true);document.body.classList.add('dark-mode');}// Test the success notification system on initial load\nsetTimeout(()=>{setSuccessNotification(\"Welcome to File System Simulator!\");setTimeout(()=>setSuccessNotification(null),5000);},1000);},[]);const handleStartVoiceCommand=async()=>{try{setError('');// If already listening, stop the voice command\nif(voiceActive){console.log('Stopping voice command...');// Call the stop endpoint\ntry{await fileSystemService.stopVoiceCommand();console.log('Voice command stopped via API');}catch(err){console.error('Error stopping voice command:',err);}setVoiceActive(false);setVoiceText('Voice command stopped');// Clear any existing polling interval\nif(recognitionInterval){console.log('Clearing polling interval');clearInterval(recognitionInterval);setRecognitionInterval(null);}// Clear voice text after a delay\nsetTimeout(()=>{setVoiceText('');},2000);return;}// Start new voice command session\nsetVoiceActive(true);setVoiceText('Listening...');// Start voice command on backend\nconsole.log('Initiating voice command on backend...');const response=await fileSystemService.startVoiceCommand();console.log('Voice command response:',response);let listeningTimeout=null;// Poll for voice recognition updates\nconsole.log('Setting up polling for voice status updates...');const interval=setInterval(async()=>{try{// Only continue polling if still in voice active mode\nif(!voiceActive){console.log('Voice recognition no longer active, stopping polling');clearInterval(interval);setRecognitionInterval(null);return;}console.log('Polling for voice status...');const voiceStatusResponse=await fileSystemService.getVoiceStatus();console.log('Voice status response:',voiceStatusResponse.data);if(voiceStatusResponse.data&&voiceStatusResponse.data.text){const currentStatus=voiceStatusResponse.data.text;// Debug the exact status received\nconsole.log('RECEIVED STATUS TEXT:',JSON.stringify(currentStatus));// PRIORITY 1: Check for special formatted messages first (exact match format)\nif(currentStatus.startsWith('FOLDER_CREATED_')||currentStatus.startsWith('FILE_CREATED_')){let actionType='unknown';let itemName='';if(currentStatus.startsWith('FOLDER_CREATED_')){actionType='folder';itemName=currentStatus.replace('FOLDER_CREATED_','');}else if(currentStatus.startsWith('FILE_CREATED_')){actionType='file';itemName=currentStatus.replace('FILE_CREATED_','');}const displayMessage=`${actionType==='folder'?'Folder':'File'} \"${itemName}\" created successfully!`;console.log('SUCCESS DETECTED - SPECIAL FORMAT:',displayMessage);// Force refresh files\nawait fetchFiles();// Set success notification with formatted message\nsetSuccessNotification(displayMessage);setTimeout(()=>setSuccessNotification(null),6000);}// PRIORITY 2: Standard format success messages\nelse if(currentStatus.includes('SUCCESS')||currentStatus.includes('success')||currentStatus.includes('Folder created')||currentStatus.includes('File created')){console.log('SUCCESS DETECTED - STANDARD FORMAT:',currentStatus);// Force refresh files\nawait fetchFiles();// Set success notification with the exact message\nsetSuccessNotification(currentStatus);setTimeout(()=>setSuccessNotification(null),6000);}// Always update the voice text display\nsetVoiceText(currentStatus);// If the command is completed, restart voice recognition\nif(voiceStatusResponse.data.completed){console.log('Voice command completed, starting a new listening session');await fileSystemService.startVoiceCommand();}}}catch(err){console.error('Error getting voice status:',err);}},300);// Poll frequently for better responsiveness\nsetRecognitionInterval(interval);}catch(err){console.error('Failed to start voice command:',err);setError('Failed to start voice command');setVoiceActive(false);setVoiceText('');}};// Clean up interval on component unmount\nuseEffect(()=>{return()=>{if(recognitionInterval){clearInterval(recognitionInterval);}};},[recognitionInterval]);const handleLogout=()=>{try{console.log('Logging out...');// First clear the auth data\nauthService.logout();console.log('Auth data cleared');// Force navigation to login page and reload to reset state\nconsole.log('Redirecting to login page');window.location.href='/';}catch(err){console.error('Logout error:',err);// Fallback navigation\nnavigate('/');}};const handleNavigate=async path=>{try{console.log('Navigating to:',path);const response=await fileSystemService.changeDirectory(path);console.log('Navigation response:',response);// Reset file state\nsetSelectedFile(null);setFileContent('');setEditMode(false);// Refresh the file list\nawait fetchFiles();}catch(err){var _err$response3;console.error(`Failed to navigate to ${path}:`,err);setError(`Failed to navigate to ${path}: ${((_err$response3=err.response)===null||_err$response3===void 0?void 0:_err$response3.data)||err.message}`);}};const handleNavigateUp=async()=>{try{console.log('Navigating up...');const response=await fileSystemService.moveUpDirectory();console.log('Navigate up response:',response);// Reset file state\nsetSelectedFile(null);setFileContent('');setEditMode(false);// Refresh the file list\nawait fetchFiles();}catch(err){var _err$response4;console.error('Failed to navigate up:',err);setError(`Failed to navigate up: ${((_err$response4=err.response)===null||_err$response4===void 0?void 0:_err$response4.data)||err.message}`);}};const handleCreateFolder=async()=>{if(!newFolderName.trim()){setError('Folder name cannot be empty');return;}try{setError('');console.log('Creating folder:',newFolderName);const response=await fileSystemService.createDirectory(newFolderName);console.log('Create folder response:',response);setNewFolderName('');setShowCreateFolder(false);// Refresh the file list\nawait fetchFiles();}catch(err){var _err$response5;console.error('Failed to create folder:',err);setError('Failed to create folder: '+(((_err$response5=err.response)===null||_err$response5===void 0?void 0:_err$response5.data)||err.message));}};const handleCreateFile=async()=>{if(!newFileName.trim()){setError('File name cannot be empty');return;}try{setError('');console.log('Creating file:',newFileName,'with content:',newFileContent);const response=await fileSystemService.createFile(newFileName,newFileContent);console.log('Create file response:',response);setNewFileName('');setNewFileContent('');setShowCreateFile(false);// Refresh the file list\nawait fetchFiles();}catch(err){var _err$response6;console.error('Failed to create file:',err);setError('Failed to create file: '+(((_err$response6=err.response)===null||_err$response6===void 0?void 0:_err$response6.data)||err.message));}};const handleDeleteItem=async(name,isDirectory)=>{try{if(isDirectory){console.log('Deleting directory:',name);const response=await fileSystemService.deleteDirectory(name);console.log('Delete directory response:',response);}else{console.log('Deleting file:',name);const response=await fileSystemService.deleteFile(name);console.log('Delete file response:',response);}// Refresh the file list\nawait fetchFiles();if(selectedFile===name){setSelectedFile(null);setFileContent('');setEditMode(false);}}catch(err){var _err$response7;console.error(`Failed to delete ${isDirectory?'folder':'file'}:`,err);setError(`Failed to delete ${isDirectory?'folder':'file'}: ${((_err$response7=err.response)===null||_err$response7===void 0?void 0:_err$response7.data)||err.message}`);}};const handleFileClick=async fileName=>{try{setError('');console.log('Reading file:',fileName);setSelectedFile(fileName);setEditMode(false);const response=await fileSystemService.readFile(fileName);console.log('Read file response status:',response.status);setFileContent(response.data);}catch(err){var _err$response8;console.error('Failed to read file:',err);setError('Failed to read file: '+(((_err$response8=err.response)===null||_err$response8===void 0?void 0:_err$response8.data)||err.message));setFileContent('');}};const handleSaveFile=async()=>{try{setError('');console.log('Saving file:',selectedFile);const response=await fileSystemService.editFile(selectedFile,fileContent);console.log('Save file response:',response);setEditMode(false);// Optionally refresh the file list after saving\nawait fetchFiles();}catch(err){var _err$response9;console.error('Failed to save file:',err);setError('Failed to save file: '+(((_err$response9=err.response)===null||_err$response9===void 0?void 0:_err$response9.data)||err.message));}};const updateVoiceStatus=useCallback(()=>{if(voiceActive){console.log(\"Polling for voice status...\");fileSystemService.getVoiceStatus().then(response=>{console.log(\"Voice status response:\",response.data);const currentStatus=response.data.text||\"\";const isCompleted=response.data.completed||false;// Update voice text with current status\nsetVoiceText(currentStatus);// Check for success messages explicitly\nif(currentStatus.includes(\"Folder created\")||currentStatus.includes(\"File created\")||currentStatus.includes(\"File opened\")||currentStatus.includes(\"Item deleted\")){console.log(\"SUCCESS DETECTED:\",currentStatus);// Set success notification with the message\nsetSuccessNotification(currentStatus);// Refresh the file list to show new changes\nfetchFiles();// Clear success notification after 10 seconds\nsetTimeout(()=>{setSuccessNotification(null);},10000);}// Handle completion\nif(isCompleted){console.log(\"Voice command completed\");setTimeout(()=>{setVoiceActive(false);setVoiceText(null);},3000);// Keep final message visible for 3 seconds\n}});}},[]);const toggleDarkMode=()=>{setDarkMode(prevMode=>{const newMode=!prevMode;localStorage.setItem('darkMode',newMode);if(newMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}return newMode;});};// Enhanced function to specifically handle voice commands\nconst processVoiceCommandStatus=async status=>{console.log('Processing voice command status:',status);// Explicit check for SUCCESS messages (case insensitive)\nif(status.includes('SUCCESS')||status.includes('success')){console.log('SUCCESS DETECTED - Setting notification:',status);setSuccessNotification(status);setTimeout(()=>setSuccessNotification(null),8000);// longer display\nawait fetchFiles();return true;}// Check for creation/action commands\nif(status.includes('created')||status.includes('deleted')||status.includes('opened')||status.includes('navigated')){console.log('ACTION DETECTED IN VOICE COMMAND:',status);// Show success notification\nsetSuccessNotification(status);setTimeout(()=>setSuccessNotification(null),5000);// Refresh files to show changes\nawait fetchFiles();return true;}return false;};// Add a more robust useEffect to handle success notifications\nuseEffect(()=>{if(successNotification){console.log('SUCCESS NOTIFICATION SET TO:',successNotification);// Keep only one notification active at a time - clear any existing timeouts\nif(window.successNotificationTimeout){console.log('Clearing existing timeout');clearTimeout(window.successNotificationTimeout);}// Store the new timeout for later reference\nwindow.successNotificationTimeout=setTimeout(()=>{console.log('Success notification timeout fired, clearing notification');setSuccessNotification(null);},8000);// Increased to 8 seconds for better visibility\n// Check if the notification element exists\nsetTimeout(()=>{const notificationElement=document.querySelector('.success-notification');if(notificationElement){console.log('Success notification found in DOM:',notificationElement);}else{console.error('SUCCESS NOTIFICATION NOT FOUND IN DOM!');}},100);// Short delay to check after render\n}else{console.log('Success notification cleared');}// Cleanup on unmount\nreturn()=>{if(window.successNotificationTimeout){clearTimeout(window.successNotificationTimeout);}};},[successNotification]);// Set notification function for testing from console\nuseEffect(()=>{// Expose a function to test setting notifications from the console\nwindow.testNotification=message=>{console.log(`Setting test notification: ${message}`);setSuccessNotification(message);setTimeout(()=>setSuccessNotification(null),5000);};return()=>{delete window.testNotification;};},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[successNotification&&/*#__PURE__*/_jsxs(\"div\",{className:\"success-notification\",children:[/*#__PURE__*/_jsx(FaCheck,{}),\" \",successNotification]}),/*#__PURE__*/_jsxs(\"div\",{className:`file-explorer ${darkMode?'dark-mode':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"explorer-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"File System Explorer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle-btn\",onClick:toggleDarkMode,title:darkMode?\"Switch to Light Mode\":\"Switch to Dark Mode\",children:darkMode?/*#__PURE__*/_jsx(FaSun,{}):/*#__PURE__*/_jsx(FaMoon,{})}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{setSuccessNotification(`Test Notification (${new Date().toLocaleTimeString()})`);setTimeout(()=>setSuccessNotification(null),5000);},className:\"action-btn\",title:\"Test Notification\",children:[/*#__PURE__*/_jsx(FaCheck,{}),\" Test\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleStartVoiceCommand,className:`action-btn ${voiceActive?'active':''}`,title:voiceActive?\"Stop Voice Command\":\"Start Voice Command\",children:[/*#__PURE__*/_jsx(FaMicrophone,{}),\" \",voiceActive?'Stop':'Voice']}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"action-btn\",title:\"Logout\",children:\"Logout\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),voiceText&&/*#__PURE__*/_jsx(\"div\",{className:\"voice-text-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:`voice-text ${voiceText.includes(\"Listening\")?\"listening\":voiceText.includes(\"Recognized:\")?\"recognized\":voiceText.includes(\"ERROR\")||voiceText.includes(\"Failed\")||voiceText.includes(\"Error\")?\"error\":voiceText.includes(\"SUCCESS\")||voiceText.includes(\"created\")||voiceText.includes(\"Navigated\")||voiceText.includes(\"Deleted\")?\"success\":voiceText.includes(\"Processing\")?\"processing\":\"\"}`,children:[/*#__PURE__*/_jsx(FaMicrophone,{className:\"voice-icon\"}),\" \",voiceText]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"path-navigation\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"current-path\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Current Path:\"}),\" \",currentDir]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleNavigateUp,className:\"nav-btn\",children:[/*#__PURE__*/_jsx(FaArrowUp,{}),\" Up\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowCreateFolder(true),className:\"action-btn\",children:[/*#__PURE__*/_jsx(FaFolder,{}),\" New Folder\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowCreateFile(true),className:\"action-btn\",children:[/*#__PURE__*/_jsx(FaFile,{}),\" New File\"]})]}),showCreateFolder&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create New Folder\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Folder Name\",value:newFolderName,onChange:e=>setNewFolderName(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateFolder,children:\"Create\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCreateFolder(false),children:\"Cancel\"})]})]})}),showCreateFile&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create New File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"File Name\",value:newFileName,onChange:e=>setNewFileName(e.target.value)}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"File Content\",value:newFileContent,onChange:e=>setNewFileContent(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateFile,children:\"Create\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCreateFile(false),children:\"Cancel\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"explorer-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Files and Folders\"}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"}):/*#__PURE__*/_jsx(\"ul\",{children:files.length===0?/*#__PURE__*/_jsx(\"li\",{className:\"empty-message\",children:\"No files or folders found\"}):files.map(item=>/*#__PURE__*/_jsxs(\"li\",{className:`file-item ${selectedFile===item.name?'selected':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-name\",onClick:()=>item.type==='directory'?handleNavigate(item.name):handleFileClick(item.name),children:[item.type==='directory'?/*#__PURE__*/_jsx(FaFolder,{className:\"icon folder\"}):/*#__PURE__*/_jsx(FaFile,{className:\"icon file\"}),item.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"file-actions\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteItem(item.name,item.type==='directory'),className:\"file-action-btn delete\",children:/*#__PURE__*/_jsx(FaTrash,{})})})]},item.name))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-preview\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedFile?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"File: \",selectedFile]}),/*#__PURE__*/_jsx(\"div\",{className:\"file-preview-actions\",children:editMode?/*#__PURE__*/_jsxs(\"button\",{onClick:handleSaveFile,className:\"edit-btn save\",children:[/*#__PURE__*/_jsx(FaSave,{}),\" Save\"]}):/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setEditMode(true),className:\"edit-btn\",children:[/*#__PURE__*/_jsx(FaEdit,{}),\" Edit\"]})})]}):'Select a file to preview'}),selectedFile&&(editMode?/*#__PURE__*/_jsx(\"textarea\",{className:\"file-content-editor\",value:fileContent,onChange:e=>setFileContent(e.target.value)}):/*#__PURE__*/_jsx(\"pre\",{className:\"file-content\",children:fileContent}))]})]})]})]});};export default FileExplorer;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","fileSystemService","authService","FaFolder","FaFile","FaArrowUp","FaPlus","FaTrash","FaEdit","FaPen","FaSave","FaMicrophone","FaCheck","FaSun","FaMoon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileExplorer","files","setFiles","currentDir","setCurrentDir","loading","setLoading","error","setError","showCreateFolder","setShowCreateFolder","showCreateFile","setShowCreateFile","newFolderName","setNewFolderName","newFileName","setNewFileName","newFileContent","setNewFileContent","selectedFile","setSelectedFile","fileContent","setFileContent","editMode","setEditMode","voiceActive","setVoiceActive","voiceText","setVoiceText","recognitionInterval","setRecognitionInterval","successNotification","setSuccessNotification","darkMode","setDarkMode","navigate","fetchFiles","console","log","dirResponse","getCurrentDirectory","data","warn","response","listFiles","items","parsedData","JSON","parse","parseErr","err","_err$response","_err$response2","message","status","handleLogout","savedTheme","localStorage","getItem","document","body","classList","add","setTimeout","handleStartVoiceCommand","stopVoiceCommand","clearInterval","startVoiceCommand","listeningTimeout","interval","setInterval","voiceStatusResponse","getVoiceStatus","text","currentStatus","stringify","startsWith","actionType","itemName","replace","displayMessage","includes","completed","logout","window","location","href","handleNavigate","path","changeDirectory","_err$response3","handleNavigateUp","moveUpDirectory","_err$response4","handleCreateFolder","trim","createDirectory","_err$response5","handleCreateFile","createFile","_err$response6","handleDeleteItem","name","isDirectory","deleteDirectory","deleteFile","_err$response7","handleFileClick","fileName","readFile","_err$response8","handleSaveFile","editFile","_err$response9","updateVoiceStatus","then","isCompleted","toggleDarkMode","prevMode","newMode","setItem","remove","processVoiceCommandStatus","successNotificationTimeout","clearTimeout","notificationElement","querySelector","testNotification","children","className","onClick","title","Date","toLocaleTimeString","type","placeholder","value","onChange","e","target","length","map","item"],"sources":["C:/Users/marco/OneDrive/Desktop/GIT_PBL#/FileSystemSimulator/frontend/src/components/FileExplorer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fileSystemService, authService } from '../api';\r\nimport { FaFolder, FaFile, FaArrowUp, FaPlus, FaTrash, FaEdit, FaPen, FaSave, FaMicrophone, FaCheck, FaSun, FaMoon } from 'react-icons/fa';\r\nimport './FileExplorer.css';\r\n\r\nconst FileExplorer = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [currentDir, setCurrentDir] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [showCreateFolder, setShowCreateFolder] = useState(false);\r\n  const [showCreateFile, setShowCreateFile] = useState(false);\r\n  const [newFolderName, setNewFolderName] = useState('');\r\n  const [newFileName, setNewFileName] = useState('');\r\n  const [newFileContent, setNewFileContent] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileContent, setFileContent] = useState('');\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [voiceActive, setVoiceActive] = useState(false);\r\n  const [voiceText, setVoiceText] = useState('');\r\n  const [recognitionInterval, setRecognitionInterval] = useState(null);\r\n  const [successNotification, setSuccessNotification] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      // Fetch current directory first\r\n      console.log('Fetching current directory...');\r\n      const dirResponse = await fileSystemService.getCurrentDirectory();\r\n      console.log('Current directory response:', dirResponse);\r\n      \r\n      if (dirResponse.data) {\r\n        setCurrentDir(dirResponse.data);\r\n        console.log('Current directory set to:', dirResponse.data);\r\n      } else {\r\n        console.warn('Unexpected current directory response format:', dirResponse);\r\n      }\r\n      \r\n      // Then fetch files in that directory\r\n      console.log('Fetching files in directory...');\r\n      const response = await fileSystemService.listFiles();\r\n      console.log('List files raw response:', response);\r\n      \r\n      // Check if the response has an items property\r\n      if (response.data && response.data.items) {\r\n        console.log('Files list received:', response.data.items);\r\n        setFiles(response.data.items);\r\n      } else {\r\n        // Try to parse the response if it's a string\r\n        try {\r\n          if (typeof response.data === 'string') {\r\n            const parsedData = JSON.parse(response.data);\r\n            if (parsedData.items) {\r\n              console.log('Files list parsed from string:', parsedData.items);\r\n              setFiles(parsedData.items);\r\n              return;\r\n            }\r\n          }\r\n        } catch (parseErr) {\r\n          console.error('Failed to parse response data:', parseErr);\r\n        }\r\n        \r\n        // Handle the case when the response doesn't have the expected format\r\n        console.error('Unexpected response format:', response.data);\r\n        setFiles([]);\r\n        setError('Unexpected response format from server');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n      setError('Failed to load files: ' + (err.response?.data || err.message));\r\n      if (err.response?.status === 401) {\r\n        // Handle unauthorized\r\n        console.warn('Unauthorized access detected, logging out...');\r\n        handleLogout();\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n    \r\n    // Set up initial theme based on local storage\r\n    const savedTheme = localStorage.getItem('darkMode');\r\n    if (savedTheme === 'true') {\r\n      setDarkMode(true);\r\n      document.body.classList.add('dark-mode');\r\n    }\r\n    \r\n    // Test the success notification system on initial load\r\n    setTimeout(() => {\r\n      setSuccessNotification(\"Welcome to File System Simulator!\");\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const handleStartVoiceCommand = async () => {\r\n    try {\r\n      setError('');\r\n      \r\n      // If already listening, stop the voice command\r\n      if (voiceActive) {\r\n        console.log('Stopping voice command...');\r\n        \r\n        // Call the stop endpoint\r\n        try {\r\n          await fileSystemService.stopVoiceCommand();\r\n          console.log('Voice command stopped via API');\r\n        } catch (err) {\r\n          console.error('Error stopping voice command:', err);\r\n        }\r\n        \r\n        setVoiceActive(false);\r\n        setVoiceText('Voice command stopped');\r\n        \r\n        // Clear any existing polling interval\r\n        if (recognitionInterval) {\r\n          console.log('Clearing polling interval');\r\n          clearInterval(recognitionInterval);\r\n          setRecognitionInterval(null);\r\n        }\r\n        \r\n        // Clear voice text after a delay\r\n        setTimeout(() => {\r\n          setVoiceText('');\r\n        }, 2000);\r\n        \r\n        return;\r\n      }\r\n      \r\n      // Start new voice command session\r\n      setVoiceActive(true);\r\n      setVoiceText('Listening...');\r\n      \r\n      // Start voice command on backend\r\n      console.log('Initiating voice command on backend...');\r\n      const response = await fileSystemService.startVoiceCommand();\r\n      console.log('Voice command response:', response);\r\n      \r\n      let listeningTimeout = null;\r\n      \r\n      // Poll for voice recognition updates\r\n      console.log('Setting up polling for voice status updates...');\r\n      const interval = setInterval(async () => {\r\n        try {\r\n          // Only continue polling if still in voice active mode\r\n          if (!voiceActive) {\r\n            console.log('Voice recognition no longer active, stopping polling');\r\n            clearInterval(interval);\r\n            setRecognitionInterval(null);\r\n            return;\r\n          }\r\n          \r\n          console.log('Polling for voice status...');\r\n          const voiceStatusResponse = await fileSystemService.getVoiceStatus();\r\n          console.log('Voice status response:', voiceStatusResponse.data);\r\n          \r\n          if (voiceStatusResponse.data && voiceStatusResponse.data.text) {\r\n            const currentStatus = voiceStatusResponse.data.text;\r\n            \r\n            // Debug the exact status received\r\n            console.log('RECEIVED STATUS TEXT:', JSON.stringify(currentStatus));\r\n            \r\n            // PRIORITY 1: Check for special formatted messages first (exact match format)\r\n            if (currentStatus.startsWith('FOLDER_CREATED_') || \r\n                currentStatus.startsWith('FILE_CREATED_')) {\r\n              \r\n              let actionType = 'unknown';\r\n              let itemName = '';\r\n              \r\n              if (currentStatus.startsWith('FOLDER_CREATED_')) {\r\n                actionType = 'folder';\r\n                itemName = currentStatus.replace('FOLDER_CREATED_', '');\r\n              } else if (currentStatus.startsWith('FILE_CREATED_')) {\r\n                actionType = 'file';\r\n                itemName = currentStatus.replace('FILE_CREATED_', '');\r\n              }\r\n              \r\n              const displayMessage = `${actionType === 'folder' ? 'Folder' : 'File'} \"${itemName}\" created successfully!`;\r\n              \r\n              console.log('SUCCESS DETECTED - SPECIAL FORMAT:', displayMessage);\r\n              \r\n              // Force refresh files\r\n              await fetchFiles();\r\n              \r\n              // Set success notification with formatted message\r\n              setSuccessNotification(displayMessage);\r\n              setTimeout(() => setSuccessNotification(null), 6000);\r\n            }\r\n            // PRIORITY 2: Standard format success messages\r\n            else if (currentStatus.includes('SUCCESS') || \r\n                currentStatus.includes('success') ||\r\n                currentStatus.includes('Folder created') || \r\n                currentStatus.includes('File created')) {\r\n              \r\n              console.log('SUCCESS DETECTED - STANDARD FORMAT:', currentStatus);\r\n              \r\n              // Force refresh files\r\n              await fetchFiles();\r\n              \r\n              // Set success notification with the exact message\r\n              setSuccessNotification(currentStatus);\r\n              setTimeout(() => setSuccessNotification(null), 6000);\r\n            }\r\n            \r\n            // Always update the voice text display\r\n            setVoiceText(currentStatus);\r\n            \r\n            // If the command is completed, restart voice recognition\r\n            if (voiceStatusResponse.data.completed) {\r\n              console.log('Voice command completed, starting a new listening session');\r\n              await fileSystemService.startVoiceCommand();\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error('Error getting voice status:', err);\r\n        }\r\n      }, 300); // Poll frequently for better responsiveness\r\n      \r\n      setRecognitionInterval(interval);\r\n      \r\n    } catch (err) {\r\n      console.error('Failed to start voice command:', err);\r\n      setError('Failed to start voice command');\r\n      setVoiceActive(false);\r\n      setVoiceText('');\r\n    }\r\n  };\r\n\r\n  // Clean up interval on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (recognitionInterval) {\r\n        clearInterval(recognitionInterval);\r\n      }\r\n    };\r\n  }, [recognitionInterval]);\r\n\r\n  const handleLogout = () => {\r\n    try {\r\n      console.log('Logging out...');\r\n      // First clear the auth data\r\n      authService.logout();\r\n      console.log('Auth data cleared');\r\n      \r\n      // Force navigation to login page and reload to reset state\r\n      console.log('Redirecting to login page');\r\n      window.location.href = '/';\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      // Fallback navigation\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  const handleNavigate = async (path) => {\r\n    try {\r\n      console.log('Navigating to:', path);\r\n      const response = await fileSystemService.changeDirectory(path);\r\n      console.log('Navigation response:', response);\r\n      \r\n      // Reset file state\r\n      setSelectedFile(null);\r\n      setFileContent('');\r\n      setEditMode(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error(`Failed to navigate to ${path}:`, err);\r\n      setError(`Failed to navigate to ${path}: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleNavigateUp = async () => {\r\n    try {\r\n      console.log('Navigating up...');\r\n      const response = await fileSystemService.moveUpDirectory();\r\n      console.log('Navigate up response:', response);\r\n      \r\n      // Reset file state\r\n      setSelectedFile(null);\r\n      setFileContent('');\r\n      setEditMode(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to navigate up:', err);\r\n      setError(`Failed to navigate up: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateFolder = async () => {\r\n    if (!newFolderName.trim()) {\r\n      setError('Folder name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      console.log('Creating folder:', newFolderName);\r\n      const response = await fileSystemService.createDirectory(newFolderName);\r\n      console.log('Create folder response:', response);\r\n      setNewFolderName('');\r\n      setShowCreateFolder(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to create folder:', err);\r\n      setError('Failed to create folder: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const handleCreateFile = async () => {\r\n    if (!newFileName.trim()) {\r\n      setError('File name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      console.log('Creating file:', newFileName, 'with content:', newFileContent);\r\n      const response = await fileSystemService.createFile(newFileName, newFileContent);\r\n      console.log('Create file response:', response);\r\n      setNewFileName('');\r\n      setNewFileContent('');\r\n      setShowCreateFile(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to create file:', err);\r\n      setError('Failed to create file: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = async (name, isDirectory) => {\r\n    try {\r\n      if (isDirectory) {\r\n        console.log('Deleting directory:', name);\r\n        const response = await fileSystemService.deleteDirectory(name);\r\n        console.log('Delete directory response:', response);\r\n      } else {\r\n        console.log('Deleting file:', name);\r\n        const response = await fileSystemService.deleteFile(name);\r\n        console.log('Delete file response:', response);\r\n      }\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n      \r\n      if (selectedFile === name) {\r\n        setSelectedFile(null);\r\n        setFileContent('');\r\n        setEditMode(false);\r\n      }\r\n    } catch (err) {\r\n      console.error(`Failed to delete ${isDirectory ? 'folder' : 'file'}:`, err);\r\n      setError(`Failed to delete ${isDirectory ? 'folder' : 'file'}: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleFileClick = async (fileName) => {\r\n    try {\r\n      setError('');\r\n      console.log('Reading file:', fileName);\r\n      setSelectedFile(fileName);\r\n      setEditMode(false);\r\n      \r\n      const response = await fileSystemService.readFile(fileName);\r\n      console.log('Read file response status:', response.status);\r\n      setFileContent(response.data);\r\n    } catch (err) {\r\n      console.error('Failed to read file:', err);\r\n      setError('Failed to read file: ' + (err.response?.data || err.message));\r\n      setFileContent('');\r\n    }\r\n  };\r\n\r\n  const handleSaveFile = async () => {\r\n    try {\r\n      setError('');\r\n      console.log('Saving file:', selectedFile);\r\n      const response = await fileSystemService.editFile(selectedFile, fileContent);\r\n      console.log('Save file response:', response);\r\n      setEditMode(false);\r\n      \r\n      // Optionally refresh the file list after saving\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to save file:', err);\r\n      setError('Failed to save file: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const updateVoiceStatus = useCallback(() => {\r\n    if (voiceActive) {\r\n      console.log(\"Polling for voice status...\");\r\n      \r\n      fileSystemService.getVoiceStatus()\r\n        .then(response => {\r\n          console.log(\"Voice status response:\", response.data);\r\n          const currentStatus = response.data.text || \"\";\r\n          const isCompleted = response.data.completed || false;\r\n          \r\n          // Update voice text with current status\r\n          setVoiceText(currentStatus);\r\n          \r\n          // Check for success messages explicitly\r\n          if (currentStatus.includes(\"Folder created\") || \r\n              currentStatus.includes(\"File created\") || \r\n              currentStatus.includes(\"File opened\") ||\r\n              currentStatus.includes(\"Item deleted\")) {\r\n            console.log(\"SUCCESS DETECTED:\", currentStatus);\r\n            \r\n            // Set success notification with the message\r\n            setSuccessNotification(currentStatus);\r\n            \r\n            // Refresh the file list to show new changes\r\n            fetchFiles();\r\n            \r\n            // Clear success notification after 10 seconds\r\n            setTimeout(() => {\r\n              setSuccessNotification(null);\r\n            }, 10000);\r\n          }\r\n          \r\n          // Handle completion\r\n          if (isCompleted) {\r\n            console.log(\"Voice command completed\");\r\n            setTimeout(() => {\r\n              setVoiceActive(false);\r\n              setVoiceText(null);\r\n            }, 3000); // Keep final message visible for 3 seconds\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(prevMode => {\r\n      const newMode = !prevMode;\r\n      localStorage.setItem('darkMode', newMode);\r\n      \r\n      if (newMode) {\r\n        document.body.classList.add('dark-mode');\r\n      } else {\r\n        document.body.classList.remove('dark-mode');\r\n      }\r\n      \r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  // Enhanced function to specifically handle voice commands\r\n  const processVoiceCommandStatus = async (status) => {\r\n    console.log('Processing voice command status:', status);\r\n    \r\n    // Explicit check for SUCCESS messages (case insensitive)\r\n    if (status.includes('SUCCESS') || status.includes('success')) {\r\n      console.log('SUCCESS DETECTED - Setting notification:', status);\r\n      setSuccessNotification(status);\r\n      setTimeout(() => setSuccessNotification(null), 8000); // longer display\r\n      await fetchFiles();\r\n      return true;\r\n    }\r\n    \r\n    // Check for creation/action commands\r\n    if (status.includes('created') || \r\n        status.includes('deleted') || \r\n        status.includes('opened') ||\r\n        status.includes('navigated')) {\r\n      \r\n      console.log('ACTION DETECTED IN VOICE COMMAND:', status);\r\n      \r\n      // Show success notification\r\n      setSuccessNotification(status);\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n      \r\n      // Refresh files to show changes\r\n      await fetchFiles();\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Add a more robust useEffect to handle success notifications\r\n  useEffect(() => {\r\n    if (successNotification) {\r\n      console.log('SUCCESS NOTIFICATION SET TO:', successNotification);\r\n      \r\n      // Keep only one notification active at a time - clear any existing timeouts\r\n      if (window.successNotificationTimeout) {\r\n        console.log('Clearing existing timeout');\r\n        clearTimeout(window.successNotificationTimeout);\r\n      }\r\n      \r\n      // Store the new timeout for later reference\r\n      window.successNotificationTimeout = setTimeout(() => {\r\n        console.log('Success notification timeout fired, clearing notification');\r\n        setSuccessNotification(null);\r\n      }, 8000);  // Increased to 8 seconds for better visibility\r\n      \r\n      // Check if the notification element exists\r\n      setTimeout(() => {\r\n        const notificationElement = document.querySelector('.success-notification');\r\n        if (notificationElement) {\r\n          console.log('Success notification found in DOM:', notificationElement);\r\n        } else {\r\n          console.error('SUCCESS NOTIFICATION NOT FOUND IN DOM!');\r\n        }\r\n      }, 100);  // Short delay to check after render\r\n    } else {\r\n      console.log('Success notification cleared');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (window.successNotificationTimeout) {\r\n        clearTimeout(window.successNotificationTimeout);\r\n      }\r\n    };\r\n  }, [successNotification]);\r\n\r\n  // Set notification function for testing from console\r\n  useEffect(() => {\r\n    // Expose a function to test setting notifications from the console\r\n    window.testNotification = (message) => {\r\n      console.log(`Setting test notification: ${message}`);\r\n      setSuccessNotification(message);\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n    };\r\n    \r\n    return () => {\r\n      delete window.testNotification;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* Success notification positioned outside the main container for maximum visibility */}\r\n      {successNotification && (\r\n        <div className=\"success-notification\">\r\n          <FaCheck /> {successNotification}\r\n        </div>\r\n      )}\r\n      \r\n      <div className={`file-explorer ${darkMode ? 'dark-mode' : ''}`}>\r\n        <div className=\"explorer-header\">\r\n          <h2>File System Explorer</h2>\r\n          <div className=\"header-actions\">\r\n            <button \r\n              className=\"theme-toggle-btn\" \r\n              onClick={toggleDarkMode} \r\n              title={darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n            >\r\n              {darkMode ? <FaSun /> : <FaMoon />}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={() => {\r\n                setSuccessNotification(`Test Notification (${new Date().toLocaleTimeString()})`);\r\n                setTimeout(() => setSuccessNotification(null), 5000);\r\n              }}\r\n              className=\"action-btn\"\r\n              title=\"Test Notification\"\r\n            >\r\n              <FaCheck /> Test\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleStartVoiceCommand} \r\n              className={`action-btn ${voiceActive ? 'active' : ''}`}\r\n              title={voiceActive ? \"Stop Voice Command\" : \"Start Voice Command\"}\r\n            >\r\n              <FaMicrophone /> {voiceActive ? 'Stop' : 'Voice'}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleLogout} \r\n              className=\"action-btn\"\r\n              title=\"Logout\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        {voiceText && (\r\n          <div className=\"voice-text-container\">\r\n            <div className={`voice-text ${\r\n              voiceText.includes(\"Listening\") ? \"listening\" :\r\n              voiceText.includes(\"Recognized:\") ? \"recognized\" :\r\n              voiceText.includes(\"ERROR\") || voiceText.includes(\"Failed\") || voiceText.includes(\"Error\") ? \"error\" :\r\n              voiceText.includes(\"SUCCESS\") || voiceText.includes(\"created\") || voiceText.includes(\"Navigated\") || voiceText.includes(\"Deleted\") ? \"success\" :\r\n              voiceText.includes(\"Processing\") ? \"processing\" :\r\n              \"\"\r\n            }`}>\r\n              <FaMicrophone className=\"voice-icon\" /> {voiceText}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"path-navigation\">\r\n          <div className=\"current-path\">\r\n            <strong>Current Path:</strong> {currentDir}\r\n          </div>\r\n          <button onClick={handleNavigateUp} className=\"nav-btn\">\r\n            <FaArrowUp /> Up\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"actions\">\r\n          <button onClick={() => setShowCreateFolder(true)} className=\"action-btn\">\r\n            <FaFolder /> New Folder\r\n          </button>\r\n          <button onClick={() => setShowCreateFile(true)} className=\"action-btn\">\r\n            <FaFile /> New File\r\n          </button>\r\n        </div>\r\n        \r\n        {showCreateFolder && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <h3>Create New Folder</h3>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Folder Name\"\r\n                value={newFolderName}\r\n                onChange={(e) => setNewFolderName(e.target.value)}\r\n              />\r\n              <div className=\"modal-actions\">\r\n                <button onClick={handleCreateFolder}>Create</button>\r\n                <button onClick={() => setShowCreateFolder(false)}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {showCreateFile && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <h3>Create New File</h3>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"File Name\"\r\n                value={newFileName}\r\n                onChange={(e) => setNewFileName(e.target.value)}\r\n              />\r\n              <textarea\r\n                placeholder=\"File Content\"\r\n                value={newFileContent}\r\n                onChange={(e) => setNewFileContent(e.target.value)}\r\n              />\r\n              <div className=\"modal-actions\">\r\n                <button onClick={handleCreateFile}>Create</button>\r\n                <button onClick={() => setShowCreateFile(false)}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"explorer-container\">\r\n          <div className=\"file-list\">\r\n            <h3>Files and Folders</h3>\r\n            {loading ? (\r\n              <div className=\"loading\">Loading...</div>\r\n            ) : (\r\n              <ul>\r\n                {files.length === 0 ? (\r\n                  <li className=\"empty-message\">No files or folders found</li>\r\n                ) : (\r\n                  files.map((item) => (\r\n                    <li key={item.name} className={`file-item ${selectedFile === item.name ? 'selected' : ''}`}>\r\n                      <div \r\n                        className=\"file-name\"\r\n                        onClick={() => item.type === 'directory' \r\n                          ? handleNavigate(item.name) \r\n                          : handleFileClick(item.name)\r\n                        }\r\n                      >\r\n                        {item.type === 'directory' ? <FaFolder className=\"icon folder\" /> : <FaFile className=\"icon file\" />}\r\n                        {item.name}\r\n                      </div>\r\n                      <div className=\"file-actions\">\r\n                        <button \r\n                          onClick={() => handleDeleteItem(item.name, item.type === 'directory')}\r\n                          className=\"file-action-btn delete\"\r\n                        >\r\n                          <FaTrash />\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"file-preview\">\r\n            <h3>\r\n              {selectedFile ? (\r\n                <>\r\n                  <span>File: {selectedFile}</span>\r\n                  <div className=\"file-preview-actions\">\r\n                    {editMode ? (\r\n                      <button onClick={handleSaveFile} className=\"edit-btn save\">\r\n                        <FaSave /> Save\r\n                      </button>\r\n                    ) : (\r\n                      <button onClick={() => setEditMode(true)} className=\"edit-btn\">\r\n                        <FaEdit /> Edit\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                'Select a file to preview'\r\n              )}\r\n            </h3>\r\n            {selectedFile && (\r\n              editMode ? (\r\n                <textarea\r\n                  className=\"file-content-editor\"\r\n                  value={fileContent}\r\n                  onChange={(e) => setFileContent(e.target.value)}\r\n                />\r\n              ) : (\r\n                <pre className=\"file-content\">{fileContent}</pre>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileExplorer; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,iBAAiB,CAAEC,WAAW,KAAQ,QAAQ,CACvD,OAASC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,CAAEC,MAAM,CAAEC,OAAO,CAAEC,MAAM,CAAEC,KAAK,CAAEC,MAAM,CAAEC,YAAY,CAAEC,OAAO,CAAEC,KAAK,CAAEC,MAAM,KAAQ,gBAAgB,CAC1I,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE5B,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAG1B,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC2B,UAAU,CAAEC,aAAa,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC6B,OAAO,CAAEC,UAAU,CAAC,CAAG9B,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC+B,KAAK,CAAEC,QAAQ,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACiC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlC,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACmC,cAAc,CAAEC,iBAAiB,CAAC,CAAGpC,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAACqC,aAAa,CAAEC,gBAAgB,CAAC,CAAGtC,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACuC,WAAW,CAAEC,cAAc,CAAC,CAAGxC,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACyC,cAAc,CAAEC,iBAAiB,CAAC,CAAG1C,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAAC2C,YAAY,CAAEC,eAAe,CAAC,CAAG5C,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAC6C,WAAW,CAAEC,cAAc,CAAC,CAAG9C,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAAC+C,QAAQ,CAAEC,WAAW,CAAC,CAAGhD,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACiD,WAAW,CAAEC,cAAc,CAAC,CAAGlD,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACmD,SAAS,CAAEC,YAAY,CAAC,CAAGpD,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACqD,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGtD,QAAQ,CAAC,IAAI,CAAC,CACpE,KAAM,CAACuD,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGxD,QAAQ,CAAC,IAAI,CAAC,CACpE,KAAM,CAACyD,QAAQ,CAAEC,WAAW,CAAC,CAAG1D,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAA2D,QAAQ,CAAGxD,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAyD,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF9B,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA6B,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5C,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAA3D,iBAAiB,CAAC4D,mBAAmB,CAAC,CAAC,CACjEH,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEC,WAAW,CAAC,CAEvD,GAAIA,WAAW,CAACE,IAAI,CAAE,CACpBrC,aAAa,CAACmC,WAAW,CAACE,IAAI,CAAC,CAC/BJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEC,WAAW,CAACE,IAAI,CAAC,CAC5D,CAAC,IAAM,CACLJ,OAAO,CAACK,IAAI,CAAC,+CAA+C,CAAEH,WAAW,CAAC,CAC5E,CAEA;AACAF,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC7C,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAACgE,SAAS,CAAC,CAAC,CACpDP,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEK,QAAQ,CAAC,CAEjD;AACA,GAAIA,QAAQ,CAACF,IAAI,EAAIE,QAAQ,CAACF,IAAI,CAACI,KAAK,CAAE,CACxCR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEK,QAAQ,CAACF,IAAI,CAACI,KAAK,CAAC,CACxD3C,QAAQ,CAACyC,QAAQ,CAACF,IAAI,CAACI,KAAK,CAAC,CAC/B,CAAC,IAAM,CACL;AACA,GAAI,CACF,GAAI,MAAO,CAAAF,QAAQ,CAACF,IAAI,GAAK,QAAQ,CAAE,CACrC,KAAM,CAAAK,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAACF,IAAI,CAAC,CAC5C,GAAIK,UAAU,CAACD,KAAK,CAAE,CACpBR,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEQ,UAAU,CAACD,KAAK,CAAC,CAC/D3C,QAAQ,CAAC4C,UAAU,CAACD,KAAK,CAAC,CAC1B,OACF,CACF,CACF,CAAE,MAAOI,QAAQ,CAAE,CACjBZ,OAAO,CAAC9B,KAAK,CAAC,gCAAgC,CAAE0C,QAAQ,CAAC,CAC3D,CAEA;AACAZ,OAAO,CAAC9B,KAAK,CAAC,6BAA6B,CAAEoC,QAAQ,CAACF,IAAI,CAAC,CAC3DvC,QAAQ,CAAC,EAAE,CAAC,CACZM,QAAQ,CAAC,wCAAwC,CAAC,CACpD,CACF,CAAE,MAAO0C,GAAG,CAAE,KAAAC,aAAA,CAAAC,cAAA,CACZf,OAAO,CAAC9B,KAAK,CAAC,uBAAuB,CAAE2C,GAAG,CAAC,CAC3C1C,QAAQ,CAAC,wBAAwB,EAAI,EAAA2C,aAAA,CAAAD,GAAG,CAACP,QAAQ,UAAAQ,aAAA,iBAAZA,aAAA,CAAcV,IAAI,GAAIS,GAAG,CAACG,OAAO,CAAC,CAAC,CACxE,GAAI,EAAAD,cAAA,CAAAF,GAAG,CAACP,QAAQ,UAAAS,cAAA,iBAAZA,cAAA,CAAcE,MAAM,IAAK,GAAG,CAAE,CAChC;AACAjB,OAAO,CAACK,IAAI,CAAC,8CAA8C,CAAC,CAC5Da,YAAY,CAAC,CAAC,CAChB,CACF,CAAC,OAAS,CACRjD,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED7B,SAAS,CAAC,IAAM,CACd2D,UAAU,CAAC,CAAC,CAEZ;AACA,KAAM,CAAAoB,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACnD,GAAIF,UAAU,GAAK,MAAM,CAAE,CACzBtB,WAAW,CAAC,IAAI,CAAC,CACjByB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAEA;AACAC,UAAU,CAAC,IAAM,CACf/B,sBAAsB,CAAC,mCAAmC,CAAC,CAC3D+B,UAAU,CAAC,IAAM/B,sBAAsB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CACtD,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAgC,uBAAuB,CAAG,KAAAA,CAAA,GAAY,CAC1C,GAAI,CACFxD,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA,GAAIiB,WAAW,CAAE,CACfY,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAExC;AACA,GAAI,CACF,KAAM,CAAA1D,iBAAiB,CAACqF,gBAAgB,CAAC,CAAC,CAC1C5B,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC9C,CAAE,MAAOY,GAAG,CAAE,CACZb,OAAO,CAAC9B,KAAK,CAAC,+BAA+B,CAAE2C,GAAG,CAAC,CACrD,CAEAxB,cAAc,CAAC,KAAK,CAAC,CACrBE,YAAY,CAAC,uBAAuB,CAAC,CAErC;AACA,GAAIC,mBAAmB,CAAE,CACvBQ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxC4B,aAAa,CAACrC,mBAAmB,CAAC,CAClCC,sBAAsB,CAAC,IAAI,CAAC,CAC9B,CAEA;AACAiC,UAAU,CAAC,IAAM,CACfnC,YAAY,CAAC,EAAE,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CAER,OACF,CAEA;AACAF,cAAc,CAAC,IAAI,CAAC,CACpBE,YAAY,CAAC,cAAc,CAAC,CAE5B;AACAS,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CACrD,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAACuF,iBAAiB,CAAC,CAAC,CAC5D9B,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEK,QAAQ,CAAC,CAEhD,GAAI,CAAAyB,gBAAgB,CAAG,IAAI,CAE3B;AACA/B,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC,CAC7D,KAAM,CAAA+B,QAAQ,CAAGC,WAAW,CAAC,SAAY,CACvC,GAAI,CACF;AACA,GAAI,CAAC7C,WAAW,CAAE,CAChBY,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC,CACnE4B,aAAa,CAACG,QAAQ,CAAC,CACvBvC,sBAAsB,CAAC,IAAI,CAAC,CAC5B,OACF,CAEAO,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC1C,KAAM,CAAAiC,mBAAmB,CAAG,KAAM,CAAA3F,iBAAiB,CAAC4F,cAAc,CAAC,CAAC,CACpEnC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEiC,mBAAmB,CAAC9B,IAAI,CAAC,CAE/D,GAAI8B,mBAAmB,CAAC9B,IAAI,EAAI8B,mBAAmB,CAAC9B,IAAI,CAACgC,IAAI,CAAE,CAC7D,KAAM,CAAAC,aAAa,CAAGH,mBAAmB,CAAC9B,IAAI,CAACgC,IAAI,CAEnD;AACApC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAES,IAAI,CAAC4B,SAAS,CAACD,aAAa,CAAC,CAAC,CAEnE;AACA,GAAIA,aAAa,CAACE,UAAU,CAAC,iBAAiB,CAAC,EAC3CF,aAAa,CAACE,UAAU,CAAC,eAAe,CAAC,CAAE,CAE7C,GAAI,CAAAC,UAAU,CAAG,SAAS,CAC1B,GAAI,CAAAC,QAAQ,CAAG,EAAE,CAEjB,GAAIJ,aAAa,CAACE,UAAU,CAAC,iBAAiB,CAAC,CAAE,CAC/CC,UAAU,CAAG,QAAQ,CACrBC,QAAQ,CAAGJ,aAAa,CAACK,OAAO,CAAC,iBAAiB,CAAE,EAAE,CAAC,CACzD,CAAC,IAAM,IAAIL,aAAa,CAACE,UAAU,CAAC,eAAe,CAAC,CAAE,CACpDC,UAAU,CAAG,MAAM,CACnBC,QAAQ,CAAGJ,aAAa,CAACK,OAAO,CAAC,eAAe,CAAE,EAAE,CAAC,CACvD,CAEA,KAAM,CAAAC,cAAc,CAAG,GAAGH,UAAU,GAAK,QAAQ,CAAG,QAAQ,CAAG,MAAM,KAAKC,QAAQ,yBAAyB,CAE3GzC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAE0C,cAAc,CAAC,CAEjE;AACA,KAAM,CAAA5C,UAAU,CAAC,CAAC,CAElB;AACAJ,sBAAsB,CAACgD,cAAc,CAAC,CACtCjB,UAAU,CAAC,IAAM/B,sBAAsB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CACtD,CACA;AAAA,IACK,IAAI0C,aAAa,CAACO,QAAQ,CAAC,SAAS,CAAC,EACtCP,aAAa,CAACO,QAAQ,CAAC,SAAS,CAAC,EACjCP,aAAa,CAACO,QAAQ,CAAC,gBAAgB,CAAC,EACxCP,aAAa,CAACO,QAAQ,CAAC,cAAc,CAAC,CAAE,CAE1C5C,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAEoC,aAAa,CAAC,CAEjE;AACA,KAAM,CAAAtC,UAAU,CAAC,CAAC,CAElB;AACAJ,sBAAsB,CAAC0C,aAAa,CAAC,CACrCX,UAAU,CAAC,IAAM/B,sBAAsB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CACtD,CAEA;AACAJ,YAAY,CAAC8C,aAAa,CAAC,CAE3B;AACA,GAAIH,mBAAmB,CAAC9B,IAAI,CAACyC,SAAS,CAAE,CACtC7C,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC,CACxE,KAAM,CAAA1D,iBAAiB,CAACuF,iBAAiB,CAAC,CAAC,CAC7C,CACF,CACF,CAAE,MAAOjB,GAAG,CAAE,CACZb,OAAO,CAAC9B,KAAK,CAAC,6BAA6B,CAAE2C,GAAG,CAAC,CACnD,CACF,CAAC,CAAE,GAAG,CAAC,CAAE;AAETpB,sBAAsB,CAACuC,QAAQ,CAAC,CAElC,CAAE,MAAOnB,GAAG,CAAE,CACZb,OAAO,CAAC9B,KAAK,CAAC,gCAAgC,CAAE2C,GAAG,CAAC,CACpD1C,QAAQ,CAAC,+BAA+B,CAAC,CACzCkB,cAAc,CAAC,KAAK,CAAC,CACrBE,YAAY,CAAC,EAAE,CAAC,CAClB,CACF,CAAC,CAED;AACAnD,SAAS,CAAC,IAAM,CACd,MAAO,IAAM,CACX,GAAIoD,mBAAmB,CAAE,CACvBqC,aAAa,CAACrC,mBAAmB,CAAC,CACpC,CACF,CAAC,CACH,CAAC,CAAE,CAACA,mBAAmB,CAAC,CAAC,CAEzB,KAAM,CAAA0B,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CACFlB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7B;AACAzD,WAAW,CAACsG,MAAM,CAAC,CAAC,CACpB9C,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAEhC;AACAD,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxC8C,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,GAAG,CAC5B,CAAE,MAAOpC,GAAG,CAAE,CACZb,OAAO,CAAC9B,KAAK,CAAC,eAAe,CAAE2C,GAAG,CAAC,CACnC;AACAf,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAED,KAAM,CAAAoD,cAAc,CAAG,KAAO,CAAAC,IAAI,EAAK,CACrC,GAAI,CACFnD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEkD,IAAI,CAAC,CACnC,KAAM,CAAA7C,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAAC6G,eAAe,CAACD,IAAI,CAAC,CAC9DnD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEK,QAAQ,CAAC,CAE7C;AACAvB,eAAe,CAAC,IAAI,CAAC,CACrBE,cAAc,CAAC,EAAE,CAAC,CAClBE,WAAW,CAAC,KAAK,CAAC,CAElB;AACA,KAAM,CAAAY,UAAU,CAAC,CAAC,CACpB,CAAE,MAAOc,GAAG,CAAE,KAAAwC,cAAA,CACZrD,OAAO,CAAC9B,KAAK,CAAC,yBAAyBiF,IAAI,GAAG,CAAEtC,GAAG,CAAC,CACpD1C,QAAQ,CAAC,yBAAyBgF,IAAI,KAAK,EAAAE,cAAA,CAAAxC,GAAG,CAACP,QAAQ,UAAA+C,cAAA,iBAAZA,cAAA,CAAcjD,IAAI,GAAIS,GAAG,CAACG,OAAO,EAAE,CAAC,CACjF,CACF,CAAC,CAED,KAAM,CAAAsC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACFtD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAC/B,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAACgH,eAAe,CAAC,CAAC,CAC1DvD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEK,QAAQ,CAAC,CAE9C;AACAvB,eAAe,CAAC,IAAI,CAAC,CACrBE,cAAc,CAAC,EAAE,CAAC,CAClBE,WAAW,CAAC,KAAK,CAAC,CAElB;AACA,KAAM,CAAAY,UAAU,CAAC,CAAC,CACpB,CAAE,MAAOc,GAAG,CAAE,KAAA2C,cAAA,CACZxD,OAAO,CAAC9B,KAAK,CAAC,wBAAwB,CAAE2C,GAAG,CAAC,CAC5C1C,QAAQ,CAAC,0BAA0B,EAAAqF,cAAA,CAAA3C,GAAG,CAACP,QAAQ,UAAAkD,cAAA,iBAAZA,cAAA,CAAcpD,IAAI,GAAIS,GAAG,CAACG,OAAO,EAAE,CAAC,CACzE,CACF,CAAC,CAED,KAAM,CAAAyC,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CAACjF,aAAa,CAACkF,IAAI,CAAC,CAAC,CAAE,CACzBvF,QAAQ,CAAC,6BAA6B,CAAC,CACvC,OACF,CAEA,GAAI,CACFA,QAAQ,CAAC,EAAE,CAAC,CACZ6B,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEzB,aAAa,CAAC,CAC9C,KAAM,CAAA8B,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAACoH,eAAe,CAACnF,aAAa,CAAC,CACvEwB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEK,QAAQ,CAAC,CAChD7B,gBAAgB,CAAC,EAAE,CAAC,CACpBJ,mBAAmB,CAAC,KAAK,CAAC,CAE1B;AACA,KAAM,CAAA0B,UAAU,CAAC,CAAC,CACpB,CAAE,MAAOc,GAAG,CAAE,KAAA+C,cAAA,CACZ5D,OAAO,CAAC9B,KAAK,CAAC,0BAA0B,CAAE2C,GAAG,CAAC,CAC9C1C,QAAQ,CAAC,2BAA2B,EAAI,EAAAyF,cAAA,CAAA/C,GAAG,CAACP,QAAQ,UAAAsD,cAAA,iBAAZA,cAAA,CAAcxD,IAAI,GAAIS,GAAG,CAACG,OAAO,CAAC,CAAC,CAC7E,CACF,CAAC,CAED,KAAM,CAAA6C,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CAACnF,WAAW,CAACgF,IAAI,CAAC,CAAC,CAAE,CACvBvF,QAAQ,CAAC,2BAA2B,CAAC,CACrC,OACF,CAEA,GAAI,CACFA,QAAQ,CAAC,EAAE,CAAC,CACZ6B,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEvB,WAAW,CAAE,eAAe,CAAEE,cAAc,CAAC,CAC3E,KAAM,CAAA0B,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAACuH,UAAU,CAACpF,WAAW,CAAEE,cAAc,CAAC,CAChFoB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEK,QAAQ,CAAC,CAC9C3B,cAAc,CAAC,EAAE,CAAC,CAClBE,iBAAiB,CAAC,EAAE,CAAC,CACrBN,iBAAiB,CAAC,KAAK,CAAC,CAExB;AACA,KAAM,CAAAwB,UAAU,CAAC,CAAC,CACpB,CAAE,MAAOc,GAAG,CAAE,KAAAkD,cAAA,CACZ/D,OAAO,CAAC9B,KAAK,CAAC,wBAAwB,CAAE2C,GAAG,CAAC,CAC5C1C,QAAQ,CAAC,yBAAyB,EAAI,EAAA4F,cAAA,CAAAlD,GAAG,CAACP,QAAQ,UAAAyD,cAAA,iBAAZA,cAAA,CAAc3D,IAAI,GAAIS,GAAG,CAACG,OAAO,CAAC,CAAC,CAC3E,CACF,CAAC,CAED,KAAM,CAAAgD,gBAAgB,CAAG,KAAAA,CAAOC,IAAI,CAAEC,WAAW,GAAK,CACpD,GAAI,CACF,GAAIA,WAAW,CAAE,CACflE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEgE,IAAI,CAAC,CACxC,KAAM,CAAA3D,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAAC4H,eAAe,CAACF,IAAI,CAAC,CAC9DjE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEK,QAAQ,CAAC,CACrD,CAAC,IAAM,CACLN,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEgE,IAAI,CAAC,CACnC,KAAM,CAAA3D,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAAC6H,UAAU,CAACH,IAAI,CAAC,CACzDjE,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEK,QAAQ,CAAC,CAChD,CAEA;AACA,KAAM,CAAAP,UAAU,CAAC,CAAC,CAElB,GAAIjB,YAAY,GAAKmF,IAAI,CAAE,CACzBlF,eAAe,CAAC,IAAI,CAAC,CACrBE,cAAc,CAAC,EAAE,CAAC,CAClBE,WAAW,CAAC,KAAK,CAAC,CACpB,CACF,CAAE,MAAO0B,GAAG,CAAE,KAAAwD,cAAA,CACZrE,OAAO,CAAC9B,KAAK,CAAC,oBAAoBgG,WAAW,CAAG,QAAQ,CAAG,MAAM,GAAG,CAAErD,GAAG,CAAC,CAC1E1C,QAAQ,CAAC,oBAAoB+F,WAAW,CAAG,QAAQ,CAAG,MAAM,KAAK,EAAAG,cAAA,CAAAxD,GAAG,CAACP,QAAQ,UAAA+D,cAAA,iBAAZA,cAAA,CAAcjE,IAAI,GAAIS,GAAG,CAACG,OAAO,EAAE,CAAC,CACvG,CACF,CAAC,CAED,KAAM,CAAAsD,eAAe,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC1C,GAAI,CACFpG,QAAQ,CAAC,EAAE,CAAC,CACZ6B,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEsE,QAAQ,CAAC,CACtCxF,eAAe,CAACwF,QAAQ,CAAC,CACzBpF,WAAW,CAAC,KAAK,CAAC,CAElB,KAAM,CAAAmB,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAACiI,QAAQ,CAACD,QAAQ,CAAC,CAC3DvE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEK,QAAQ,CAACW,MAAM,CAAC,CAC1DhC,cAAc,CAACqB,QAAQ,CAACF,IAAI,CAAC,CAC/B,CAAE,MAAOS,GAAG,CAAE,KAAA4D,cAAA,CACZzE,OAAO,CAAC9B,KAAK,CAAC,sBAAsB,CAAE2C,GAAG,CAAC,CAC1C1C,QAAQ,CAAC,uBAAuB,EAAI,EAAAsG,cAAA,CAAA5D,GAAG,CAACP,QAAQ,UAAAmE,cAAA,iBAAZA,cAAA,CAAcrE,IAAI,GAAIS,GAAG,CAACG,OAAO,CAAC,CAAC,CACvE/B,cAAc,CAAC,EAAE,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAyF,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACFvG,QAAQ,CAAC,EAAE,CAAC,CACZ6B,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEnB,YAAY,CAAC,CACzC,KAAM,CAAAwB,QAAQ,CAAG,KAAM,CAAA/D,iBAAiB,CAACoI,QAAQ,CAAC7F,YAAY,CAAEE,WAAW,CAAC,CAC5EgB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEK,QAAQ,CAAC,CAC5CnB,WAAW,CAAC,KAAK,CAAC,CAElB;AACA,KAAM,CAAAY,UAAU,CAAC,CAAC,CACpB,CAAE,MAAOc,GAAG,CAAE,KAAA+D,cAAA,CACZ5E,OAAO,CAAC9B,KAAK,CAAC,sBAAsB,CAAE2C,GAAG,CAAC,CAC1C1C,QAAQ,CAAC,uBAAuB,EAAI,EAAAyG,cAAA,CAAA/D,GAAG,CAACP,QAAQ,UAAAsE,cAAA,iBAAZA,cAAA,CAAcxE,IAAI,GAAIS,GAAG,CAACG,OAAO,CAAC,CAAC,CACzE,CACF,CAAC,CAED,KAAM,CAAA6D,iBAAiB,CAAGxI,WAAW,CAAC,IAAM,CAC1C,GAAI+C,WAAW,CAAE,CACfY,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAE1C1D,iBAAiB,CAAC4F,cAAc,CAAC,CAAC,CAC/B2C,IAAI,CAACxE,QAAQ,EAAI,CAChBN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEK,QAAQ,CAACF,IAAI,CAAC,CACpD,KAAM,CAAAiC,aAAa,CAAG/B,QAAQ,CAACF,IAAI,CAACgC,IAAI,EAAI,EAAE,CAC9C,KAAM,CAAA2C,WAAW,CAAGzE,QAAQ,CAACF,IAAI,CAACyC,SAAS,EAAI,KAAK,CAEpD;AACAtD,YAAY,CAAC8C,aAAa,CAAC,CAE3B;AACA,GAAIA,aAAa,CAACO,QAAQ,CAAC,gBAAgB,CAAC,EACxCP,aAAa,CAACO,QAAQ,CAAC,cAAc,CAAC,EACtCP,aAAa,CAACO,QAAQ,CAAC,aAAa,CAAC,EACrCP,aAAa,CAACO,QAAQ,CAAC,cAAc,CAAC,CAAE,CAC1C5C,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEoC,aAAa,CAAC,CAE/C;AACA1C,sBAAsB,CAAC0C,aAAa,CAAC,CAErC;AACAtC,UAAU,CAAC,CAAC,CAEZ;AACA2B,UAAU,CAAC,IAAM,CACf/B,sBAAsB,CAAC,IAAI,CAAC,CAC9B,CAAC,CAAE,KAAK,CAAC,CACX,CAEA;AACA,GAAIoF,WAAW,CAAE,CACf/E,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtCyB,UAAU,CAAC,IAAM,CACfrC,cAAc,CAAC,KAAK,CAAC,CACrBE,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAAE,IAAI,CAAC,CAAE;AACZ,CACF,CAAC,CAAC,CACN,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAyF,cAAc,CAAGA,CAAA,GAAM,CAC3BnF,WAAW,CAACoF,QAAQ,EAAI,CACtB,KAAM,CAAAC,OAAO,CAAG,CAACD,QAAQ,CACzB7D,YAAY,CAAC+D,OAAO,CAAC,UAAU,CAAED,OAAO,CAAC,CAEzC,GAAIA,OAAO,CAAE,CACX5D,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC4D,MAAM,CAAC,WAAW,CAAC,CAC7C,CAEA,MAAO,CAAAF,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAG,yBAAyB,CAAG,KAAO,CAAApE,MAAM,EAAK,CAClDjB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEgB,MAAM,CAAC,CAEvD;AACA,GAAIA,MAAM,CAAC2B,QAAQ,CAAC,SAAS,CAAC,EAAI3B,MAAM,CAAC2B,QAAQ,CAAC,SAAS,CAAC,CAAE,CAC5D5C,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEgB,MAAM,CAAC,CAC/DtB,sBAAsB,CAACsB,MAAM,CAAC,CAC9BS,UAAU,CAAC,IAAM/B,sBAAsB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CAAE;AACtD,KAAM,CAAAI,UAAU,CAAC,CAAC,CAClB,MAAO,KAAI,CACb,CAEA;AACA,GAAIkB,MAAM,CAAC2B,QAAQ,CAAC,SAAS,CAAC,EAC1B3B,MAAM,CAAC2B,QAAQ,CAAC,SAAS,CAAC,EAC1B3B,MAAM,CAAC2B,QAAQ,CAAC,QAAQ,CAAC,EACzB3B,MAAM,CAAC2B,QAAQ,CAAC,WAAW,CAAC,CAAE,CAEhC5C,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEgB,MAAM,CAAC,CAExD;AACAtB,sBAAsB,CAACsB,MAAM,CAAC,CAC9BS,UAAU,CAAC,IAAM/B,sBAAsB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CAEpD;AACA,KAAM,CAAAI,UAAU,CAAC,CAAC,CAClB,MAAO,KAAI,CACb,CACA,MAAO,MAAK,CACd,CAAC,CAED;AACA3D,SAAS,CAAC,IAAM,CACd,GAAIsD,mBAAmB,CAAE,CACvBM,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEP,mBAAmB,CAAC,CAEhE;AACA,GAAIqD,MAAM,CAACuC,0BAA0B,CAAE,CACrCtF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxCsF,YAAY,CAACxC,MAAM,CAACuC,0BAA0B,CAAC,CACjD,CAEA;AACAvC,MAAM,CAACuC,0BAA0B,CAAG5D,UAAU,CAAC,IAAM,CACnD1B,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC,CACxEN,sBAAsB,CAAC,IAAI,CAAC,CAC9B,CAAC,CAAE,IAAI,CAAC,CAAG;AAEX;AACA+B,UAAU,CAAC,IAAM,CACf,KAAM,CAAA8D,mBAAmB,CAAGlE,QAAQ,CAACmE,aAAa,CAAC,uBAAuB,CAAC,CAC3E,GAAID,mBAAmB,CAAE,CACvBxF,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAEuF,mBAAmB,CAAC,CACxE,CAAC,IAAM,CACLxF,OAAO,CAAC9B,KAAK,CAAC,wCAAwC,CAAC,CACzD,CACF,CAAC,CAAE,GAAG,CAAC,CAAG;AACZ,CAAC,IAAM,CACL8B,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC7C,CAEA;AACA,MAAO,IAAM,CACX,GAAI8C,MAAM,CAACuC,0BAA0B,CAAE,CACrCC,YAAY,CAACxC,MAAM,CAACuC,0BAA0B,CAAC,CACjD,CACF,CAAC,CACH,CAAC,CAAE,CAAC5F,mBAAmB,CAAC,CAAC,CAEzB;AACAtD,SAAS,CAAC,IAAM,CACd;AACA2G,MAAM,CAAC2C,gBAAgB,CAAI1E,OAAO,EAAK,CACrChB,OAAO,CAACC,GAAG,CAAC,8BAA8Be,OAAO,EAAE,CAAC,CACpDrB,sBAAsB,CAACqB,OAAO,CAAC,CAC/BU,UAAU,CAAC,IAAM/B,sBAAsB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CACtD,CAAC,CAED,MAAO,IAAM,CACX,MAAO,CAAAoD,MAAM,CAAC2C,gBAAgB,CAChC,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACElI,KAAA,CAAAE,SAAA,EAAAiI,QAAA,EAEGjG,mBAAmB,eAClBlC,KAAA,QAAKoI,SAAS,CAAC,sBAAsB,CAAAD,QAAA,eACnCrI,IAAA,CAACJ,OAAO,GAAE,CAAC,IAAC,CAACwC,mBAAmB,EAC7B,CACN,cAEDlC,KAAA,QAAKoI,SAAS,CAAE,iBAAiBhG,QAAQ,CAAG,WAAW,CAAG,EAAE,EAAG,CAAA+F,QAAA,eAC7DnI,KAAA,QAAKoI,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BrI,IAAA,OAAAqI,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BnI,KAAA,QAAKoI,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BrI,IAAA,WACEsI,SAAS,CAAC,kBAAkB,CAC5BC,OAAO,CAAEb,cAAe,CACxBc,KAAK,CAAElG,QAAQ,CAAG,sBAAsB,CAAG,qBAAsB,CAAA+F,QAAA,CAEhE/F,QAAQ,cAAGtC,IAAA,CAACH,KAAK,GAAE,CAAC,cAAGG,IAAA,CAACF,MAAM,GAAE,CAAC,CAC5B,CAAC,cAETI,KAAA,WACEqI,OAAO,CAAEA,CAAA,GAAM,CACblG,sBAAsB,CAAC,sBAAsB,GAAI,CAAAoG,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAChFtE,UAAU,CAAC,IAAM/B,sBAAsB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CACtD,CAAE,CACFiG,SAAS,CAAC,YAAY,CACtBE,KAAK,CAAC,mBAAmB,CAAAH,QAAA,eAEzBrI,IAAA,CAACJ,OAAO,GAAE,CAAC,QACb,EAAQ,CAAC,cAETM,KAAA,WACEqI,OAAO,CAAElE,uBAAwB,CACjCiE,SAAS,CAAE,cAAcxG,WAAW,CAAG,QAAQ,CAAG,EAAE,EAAG,CACvD0G,KAAK,CAAE1G,WAAW,CAAG,oBAAoB,CAAG,qBAAsB,CAAAuG,QAAA,eAElErI,IAAA,CAACL,YAAY,GAAE,CAAC,IAAC,CAACmC,WAAW,CAAG,MAAM,CAAG,OAAO,EAC1C,CAAC,cAET9B,IAAA,WACEuI,OAAO,CAAE3E,YAAa,CACtB0E,SAAS,CAAC,YAAY,CACtBE,KAAK,CAAC,QAAQ,CAAAH,QAAA,CACf,QAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAELzH,KAAK,eAAIZ,IAAA,QAAKsI,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAEzH,KAAK,CAAM,CAAC,CAErDoB,SAAS,eACRhC,IAAA,QAAKsI,SAAS,CAAC,sBAAsB,CAAAD,QAAA,cACnCnI,KAAA,QAAKoI,SAAS,CAAE,cACdtG,SAAS,CAACsD,QAAQ,CAAC,WAAW,CAAC,CAAG,WAAW,CAC7CtD,SAAS,CAACsD,QAAQ,CAAC,aAAa,CAAC,CAAG,YAAY,CAChDtD,SAAS,CAACsD,QAAQ,CAAC,OAAO,CAAC,EAAItD,SAAS,CAACsD,QAAQ,CAAC,QAAQ,CAAC,EAAItD,SAAS,CAACsD,QAAQ,CAAC,OAAO,CAAC,CAAG,OAAO,CACpGtD,SAAS,CAACsD,QAAQ,CAAC,SAAS,CAAC,EAAItD,SAAS,CAACsD,QAAQ,CAAC,SAAS,CAAC,EAAItD,SAAS,CAACsD,QAAQ,CAAC,WAAW,CAAC,EAAItD,SAAS,CAACsD,QAAQ,CAAC,SAAS,CAAC,CAAG,SAAS,CAC9ItD,SAAS,CAACsD,QAAQ,CAAC,YAAY,CAAC,CAAG,YAAY,CAC/C,EAAE,EACD,CAAA+C,QAAA,eACDrI,IAAA,CAACL,YAAY,EAAC2I,SAAS,CAAC,YAAY,CAAE,CAAC,IAAC,CAACtG,SAAS,EAC/C,CAAC,CACH,CACN,cAED9B,KAAA,QAAKoI,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BnI,KAAA,QAAKoI,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BrI,IAAA,WAAAqI,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAAC7H,UAAU,EACvC,CAAC,cACNN,KAAA,WAAQqI,OAAO,CAAEvC,gBAAiB,CAACsC,SAAS,CAAC,SAAS,CAAAD,QAAA,eACpDrI,IAAA,CAACX,SAAS,GAAE,CAAC,MACf,EAAQ,CAAC,EACN,CAAC,cAENa,KAAA,QAAKoI,SAAS,CAAC,SAAS,CAAAD,QAAA,eACtBnI,KAAA,WAAQqI,OAAO,CAAEA,CAAA,GAAMxH,mBAAmB,CAAC,IAAI,CAAE,CAACuH,SAAS,CAAC,YAAY,CAAAD,QAAA,eACtErI,IAAA,CAACb,QAAQ,GAAE,CAAC,cACd,EAAQ,CAAC,cACTe,KAAA,WAAQqI,OAAO,CAAEA,CAAA,GAAMtH,iBAAiB,CAAC,IAAI,CAAE,CAACqH,SAAS,CAAC,YAAY,CAAAD,QAAA,eACpErI,IAAA,CAACZ,MAAM,GAAE,CAAC,YACZ,EAAQ,CAAC,EACN,CAAC,CAEL0B,gBAAgB,eACfd,IAAA,QAAKsI,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpBnI,KAAA,QAAKoI,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BrI,IAAA,OAAAqI,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BrI,IAAA,UACE2I,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,aAAa,CACzBC,KAAK,CAAE3H,aAAc,CACrB4H,QAAQ,CAAGC,CAAC,EAAK5H,gBAAgB,CAAC4H,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACnD,CAAC,cACF3I,KAAA,QAAKoI,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BrI,IAAA,WAAQuI,OAAO,CAAEpC,kBAAmB,CAAAkC,QAAA,CAAC,QAAM,CAAQ,CAAC,cACpDrI,IAAA,WAAQuI,OAAO,CAAEA,CAAA,GAAMxH,mBAAmB,CAAC,KAAK,CAAE,CAAAsH,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC/D,CAAC,EACH,CAAC,CACH,CACN,CAEArH,cAAc,eACbhB,IAAA,QAAKsI,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpBnI,KAAA,QAAKoI,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BrI,IAAA,OAAAqI,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBrI,IAAA,UACE2I,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,WAAW,CACvBC,KAAK,CAAEzH,WAAY,CACnB0H,QAAQ,CAAGC,CAAC,EAAK1H,cAAc,CAAC0H,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACjD,CAAC,cACF7I,IAAA,aACE4I,WAAW,CAAC,cAAc,CAC1BC,KAAK,CAAEvH,cAAe,CACtBwH,QAAQ,CAAGC,CAAC,EAAKxH,iBAAiB,CAACwH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACpD,CAAC,cACF3I,KAAA,QAAKoI,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BrI,IAAA,WAAQuI,OAAO,CAAEhC,gBAAiB,CAAA8B,QAAA,CAAC,QAAM,CAAQ,CAAC,cAClDrI,IAAA,WAAQuI,OAAO,CAAEA,CAAA,GAAMtH,iBAAiB,CAAC,KAAK,CAAE,CAAAoH,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC7D,CAAC,EACH,CAAC,CACH,CACN,cAEDnI,KAAA,QAAKoI,SAAS,CAAC,oBAAoB,CAAAD,QAAA,eACjCnI,KAAA,QAAKoI,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxBrI,IAAA,OAAAqI,QAAA,CAAI,mBAAiB,CAAI,CAAC,CACzB3H,OAAO,cACNV,IAAA,QAAKsI,SAAS,CAAC,SAAS,CAAAD,QAAA,CAAC,YAAU,CAAK,CAAC,cAEzCrI,IAAA,OAAAqI,QAAA,CACG/H,KAAK,CAAC2I,MAAM,GAAK,CAAC,cACjBjJ,IAAA,OAAIsI,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,2BAAyB,CAAI,CAAC,CAE5D/H,KAAK,CAAC4I,GAAG,CAAEC,IAAI,eACbjJ,KAAA,OAAoBoI,SAAS,CAAE,aAAa9G,YAAY,GAAK2H,IAAI,CAACxC,IAAI,CAAG,UAAU,CAAG,EAAE,EAAG,CAAA0B,QAAA,eACzFnI,KAAA,QACEoI,SAAS,CAAC,WAAW,CACrBC,OAAO,CAAEA,CAAA,GAAMY,IAAI,CAACR,IAAI,GAAK,WAAW,CACpC/C,cAAc,CAACuD,IAAI,CAACxC,IAAI,CAAC,CACzBK,eAAe,CAACmC,IAAI,CAACxC,IAAI,CAC5B,CAAA0B,QAAA,EAEAc,IAAI,CAACR,IAAI,GAAK,WAAW,cAAG3I,IAAA,CAACb,QAAQ,EAACmJ,SAAS,CAAC,aAAa,CAAE,CAAC,cAAGtI,IAAA,CAACZ,MAAM,EAACkJ,SAAS,CAAC,WAAW,CAAE,CAAC,CACnGa,IAAI,CAACxC,IAAI,EACP,CAAC,cACN3G,IAAA,QAAKsI,SAAS,CAAC,cAAc,CAAAD,QAAA,cAC3BrI,IAAA,WACEuI,OAAO,CAAEA,CAAA,GAAM7B,gBAAgB,CAACyC,IAAI,CAACxC,IAAI,CAAEwC,IAAI,CAACR,IAAI,GAAK,WAAW,CAAE,CACtEL,SAAS,CAAC,wBAAwB,CAAAD,QAAA,cAElCrI,IAAA,CAACT,OAAO,GAAE,CAAC,CACL,CAAC,CACN,CAAC,GAlBC4J,IAAI,CAACxC,IAmBV,CACL,CACF,CACC,CACL,EACE,CAAC,cAENzG,KAAA,QAAKoI,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BrI,IAAA,OAAAqI,QAAA,CACG7G,YAAY,cACXtB,KAAA,CAAAE,SAAA,EAAAiI,QAAA,eACEnI,KAAA,SAAAmI,QAAA,EAAM,QAAM,CAAC7G,YAAY,EAAO,CAAC,cACjCxB,IAAA,QAAKsI,SAAS,CAAC,sBAAsB,CAAAD,QAAA,CAClCzG,QAAQ,cACP1B,KAAA,WAAQqI,OAAO,CAAEnB,cAAe,CAACkB,SAAS,CAAC,eAAe,CAAAD,QAAA,eACxDrI,IAAA,CAACN,MAAM,GAAE,CAAC,QACZ,EAAQ,CAAC,cAETQ,KAAA,WAAQqI,OAAO,CAAEA,CAAA,GAAM1G,WAAW,CAAC,IAAI,CAAE,CAACyG,SAAS,CAAC,UAAU,CAAAD,QAAA,eAC5DrI,IAAA,CAACR,MAAM,GAAE,CAAC,QACZ,EAAQ,CACT,CACE,CAAC,EACN,CAAC,CAEH,0BACD,CACC,CAAC,CACJgC,YAAY,GACXI,QAAQ,cACN5B,IAAA,aACEsI,SAAS,CAAC,qBAAqB,CAC/BO,KAAK,CAAEnH,WAAY,CACnBoH,QAAQ,CAAGC,CAAC,EAAKpH,cAAc,CAACoH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACjD,CAAC,cAEF7I,IAAA,QAAKsI,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAE3G,WAAW,CAAM,CACjD,CACF,EACE,CAAC,EACH,CAAC,EACH,CAAC,EACN,CAAC,CAEP,CAAC,CAED,cAAe,CAAArB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}