{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: false // Important for CORS\n});\n\n// Add interceptor to add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // Ensure content type is set for all requests\n  config.headers['Content-Type'] = 'application/json';\n  return config;\n}, error => Promise.reject(error));\n\n// Auth services\nexport const authService = {\n  login: async (username, password) => {\n    const response = await api.post('/login', {\n      username,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('currentDir', response.data.currentDir);\n    }\n    return response.data;\n  },\n  signup: async (username, password) => {\n    try {\n      // Using fetch API directly as an alternative to axios for signup\n      const response = await fetch(`${API_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText || 'Registration failed');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('currentDir');\n  },\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  }\n};\n\n// File system services\nexport const fileSystemService = {\n  // List directory contents\n  listFiles: async () => {\n    return await api.get('/ls');\n  },\n  // Get current directory\n  getCurrentDirectory: async () => {\n    return await api.get('/pwd');\n  },\n  // Create directory\n  createDirectory: async folderName => {\n    return await api.post(`/mkdir/${folderName}`);\n  },\n  // Delete directory\n  deleteDirectory: async folderName => {\n    return await api.delete(`/rmdir/${folderName}`);\n  },\n  // Create file\n  createFile: async (fileName, content) => {\n    return await api.post(`/create-file/${fileName}`, content);\n  },\n  // Read file\n  readFile: async fileName => {\n    return await api.get(`/read-file/${fileName}`);\n  },\n  // Edit file\n  editFile: async (fileName, content) => {\n    return await api.put(`/edit-file/${fileName}`, content);\n  },\n  // Append to file\n  appendToFile: async (fileName, content) => {\n    return await api.put(`/append-file/${fileName}`, content);\n  },\n  // Delete file\n  deleteFile: async fileName => {\n    return await api.delete(`/delete-file/${fileName}`);\n  },\n  // Change directory\n  changeDirectory: async path => {\n    const response = await api.post(`/cd/${path}`);\n    if (response.data.currentDir) {\n      localStorage.setItem('currentDir', response.data.currentDir);\n    }\n    return response.data;\n  },\n  // Move up directory\n  moveUpDirectory: async () => {\n    return await api.post('/cd..');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authService","login","username","password","response","post","data","setItem","currentDir","signup","fetch","method","body","JSON","stringify","ok","errorText","text","Error","json","console","logout","removeItem","isAuthenticated","fileSystemService","listFiles","get","getCurrentDirectory","createDirectory","folderName","deleteDirectory","delete","createFile","fileName","content","readFile","editFile","put","appendToFile","deleteFile","changeDirectory","path","moveUpDirectory"],"sources":["C:/Users/marco/OneDrive/Desktop/GIT_PBL#/FileSystemSimulator/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: false // Important for CORS\r\n});\r\n\r\n// Add interceptor to add auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    // Ensure content type is set for all requests\r\n    config.headers['Content-Type'] = 'application/json';\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Auth services\r\nexport const authService = {\r\n  login: async (username, password) => {\r\n    const response = await api.post('/login', { username, password });\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('currentDir', response.data.currentDir);\r\n    }\r\n    return response.data;\r\n  },\r\n  signup: async (username, password) => {\r\n    try {\r\n      // Using fetch API directly as an alternative to axios for signup\r\n      const response = await fetch(`${API_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText || 'Registration failed');\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('currentDir');\r\n  },\r\n  isAuthenticated: () => {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n};\r\n\r\n// File system services\r\nexport const fileSystemService = {\r\n  // List directory contents\r\n  listFiles: async () => {\r\n    return await api.get('/ls');\r\n  },\r\n  \r\n  // Get current directory\r\n  getCurrentDirectory: async () => {\r\n    return await api.get('/pwd');\r\n  },\r\n  \r\n  // Create directory\r\n  createDirectory: async (folderName) => {\r\n    return await api.post(`/mkdir/${folderName}`);\r\n  },\r\n  \r\n  // Delete directory\r\n  deleteDirectory: async (folderName) => {\r\n    return await api.delete(`/rmdir/${folderName}`);\r\n  },\r\n  \r\n  // Create file\r\n  createFile: async (fileName, content) => {\r\n    return await api.post(`/create-file/${fileName}`, content);\r\n  },\r\n  \r\n  // Read file\r\n  readFile: async (fileName) => {\r\n    return await api.get(`/read-file/${fileName}`);\r\n  },\r\n  \r\n  // Edit file\r\n  editFile: async (fileName, content) => {\r\n    return await api.put(`/edit-file/${fileName}`, content);\r\n  },\r\n  \r\n  // Append to file\r\n  appendToFile: async (fileName, content) => {\r\n    return await api.put(`/append-file/${fileName}`, content);\r\n  },\r\n  \r\n  // Delete file\r\n  deleteFile: async (fileName) => {\r\n    return await api.delete(`/delete-file/${fileName}`);\r\n  },\r\n  \r\n  // Change directory\r\n  changeDirectory: async (path) => {\r\n    const response = await api.post(`/cd/${path}`);\r\n    if (response.data.currentDir) {\r\n      localStorage.setItem('currentDir', response.data.currentDir);\r\n    }\r\n    return response.data;\r\n  },\r\n  \r\n  // Move up directory\r\n  moveUpDirectory: async () => {\r\n    return await api.post('/cd..');\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}