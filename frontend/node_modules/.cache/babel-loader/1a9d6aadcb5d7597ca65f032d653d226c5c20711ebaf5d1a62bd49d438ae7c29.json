{"ast":null,"code":"import axios from'axios';// Use relative URLs to leverage the proxy in package.json\nconst API_URL='';// Create axios instance with default config\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'},withCredentials:false// Important for CORS\n});// Add interceptor to add auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}// Ensure content type is set for all requests\nconfig.headers['Content-Type']='application/json';return config;},error=>Promise.reject(error));// Auth services\nexport const authService={login:async(username,password)=>{try{// Use axios for consistency with other calls\nconst response=await api.post('/login',{username,password});if(response.data.token){localStorage.setItem('token',response.data.token);localStorage.setItem('currentDir',response.data.currentDir);}return response.data;}catch(error){console.error('Login error:',error);throw error;}},signup:async(username,password)=>{try{// Use axios now that we have a proxy\nconst response=await api.post('/signup',{username,password});return response.data;}catch(error){console.error('Signup error:',error);throw error;}},logout:()=>{localStorage.removeItem('token');localStorage.removeItem('currentDir');},isAuthenticated:()=>{const token=localStorage.getItem('token');// If no token exists, user is not authenticated\nif(!token){console.log('No auth token found');return false;}try{// Basic validation - check if token format is valid\n// A proper JWT should have 3 parts separated by dots\nconst tokenParts=token.split('.');if(tokenParts.length!==3){console.log('Invalid token format');return false;}// More thorough validation would involve checking expiration\n// For simplicity, we're just checking format here\nreturn true;}catch(error){console.error('Error validating token:',error);return false;}}};// File system services\nexport const fileSystemService={// List directory contents\nlistFiles:async()=>{return await api.get('/ls');},// Get current directory\ngetCurrentDirectory:async()=>{return await api.get('/pwd');},// Create directory\ncreateDirectory:async folderName=>{return await api.post(`/mkdir/${folderName}`);},// Delete directory\ndeleteDirectory:async folderName=>{return await api.delete(`/rmdir/${folderName}`);},// Create file\ncreateFile:async(fileName,content)=>{return await api.post(`/create-file/${fileName}`,content);},// Read file\nreadFile:async fileName=>{return await api.get(`/read-file/${fileName}`);},// Edit file\neditFile:async(fileName,content)=>{return await api.put(`/edit-file/${fileName}`,content);},// Append to file\nappendToFile:async(fileName,content)=>{return await api.put(`/append-file/${fileName}`,content);},// Delete file\ndeleteFile:async fileName=>{return await api.delete(`/delete-file/${fileName}`);},// Change directory\nchangeDirectory:async path=>{const response=await api.post(`/cd/${path}`);if(response.data.currentDir){localStorage.setItem('currentDir',response.data.currentDir);}return response.data;},// Move up directory\nmoveUpDirectory:async()=>{return await api.post('/cd..');},// Start voice command\nstartVoiceCommand:async()=>{return await api.post('/start-voice');},// Stop voice command\nstopVoiceCommand:async()=>{return await api.post('/stop-voice');},// Get voice recognition status\ngetVoiceStatus:async()=>{return await api.get('/voice-status');}};export default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authService","login","username","password","response","post","data","setItem","currentDir","console","signup","logout","removeItem","isAuthenticated","log","tokenParts","split","length","fileSystemService","listFiles","get","getCurrentDirectory","createDirectory","folderName","deleteDirectory","delete","createFile","fileName","content","readFile","editFile","put","appendToFile","deleteFile","changeDirectory","path","moveUpDirectory","startVoiceCommand","stopVoiceCommand","getVoiceStatus"],"sources":["C:/Users/marco/OneDrive/Desktop/GIT_PBL#/FileSystemSimulator/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Use relative URLs to leverage the proxy in package.json\r\nconst API_URL = '';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: false // Important for CORS\r\n});\r\n\r\n// Add interceptor to add auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    // Ensure content type is set for all requests\r\n    config.headers['Content-Type'] = 'application/json';\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Auth services\r\nexport const authService = {\r\n  login: async (username, password) => {\r\n    try {\r\n      // Use axios for consistency with other calls\r\n      const response = await api.post('/login', { username, password });\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('currentDir', response.data.currentDir);\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  signup: async (username, password) => {\r\n    try {\r\n      // Use axios now that we have a proxy\r\n      const response = await api.post('/signup', { username, password });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('currentDir');\r\n  },\r\n  isAuthenticated: () => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    // If no token exists, user is not authenticated\r\n    if (!token) {\r\n      console.log('No auth token found');\r\n      return false;\r\n    }\r\n    \r\n    try {\r\n      // Basic validation - check if token format is valid\r\n      // A proper JWT should have 3 parts separated by dots\r\n      const tokenParts = token.split('.');\r\n      if (tokenParts.length !== 3) {\r\n        console.log('Invalid token format');\r\n        return false;\r\n      }\r\n      \r\n      // More thorough validation would involve checking expiration\r\n      // For simplicity, we're just checking format here\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error validating token:', error);\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\n// File system services\r\nexport const fileSystemService = {\r\n  // List directory contents\r\n  listFiles: async () => {\r\n    return await api.get('/ls');\r\n  },\r\n  \r\n  // Get current directory\r\n  getCurrentDirectory: async () => {\r\n    return await api.get('/pwd');\r\n  },\r\n  \r\n  // Create directory\r\n  createDirectory: async (folderName) => {\r\n    return await api.post(`/mkdir/${folderName}`);\r\n  },\r\n  \r\n  // Delete directory\r\n  deleteDirectory: async (folderName) => {\r\n    return await api.delete(`/rmdir/${folderName}`);\r\n  },\r\n  \r\n  // Create file\r\n  createFile: async (fileName, content) => {\r\n    return await api.post(`/create-file/${fileName}`, content);\r\n  },\r\n  \r\n  // Read file\r\n  readFile: async (fileName) => {\r\n    return await api.get(`/read-file/${fileName}`);\r\n  },\r\n  \r\n  // Edit file\r\n  editFile: async (fileName, content) => {\r\n    return await api.put(`/edit-file/${fileName}`, content);\r\n  },\r\n  \r\n  // Append to file\r\n  appendToFile: async (fileName, content) => {\r\n    return await api.put(`/append-file/${fileName}`, content);\r\n  },\r\n  \r\n  // Delete file\r\n  deleteFile: async (fileName) => {\r\n    return await api.delete(`/delete-file/${fileName}`);\r\n  },\r\n  \r\n  // Change directory\r\n  changeDirectory: async (path) => {\r\n    const response = await api.post(`/cd/${path}`);\r\n    if (response.data.currentDir) {\r\n      localStorage.setItem('currentDir', response.data.currentDir);\r\n    }\r\n    return response.data;\r\n  },\r\n  \r\n  // Move up directory\r\n  moveUpDirectory: async () => {\r\n    return await api.post('/cd..');\r\n  },\r\n  \r\n  // Start voice command\r\n  startVoiceCommand: async () => {\r\n    return await api.post('/start-voice');\r\n  },\r\n  \r\n  // Stop voice command\r\n  stopVoiceCommand: async () => {\r\n    return await api.post('/stop-voice');\r\n  },\r\n  \r\n  // Get voice recognition status\r\n  getVoiceStatus: async () => {\r\n    return await api.get('/voice-status');\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}