{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\OneDrive\\\\Desktop\\\\GIT_PBL_FINAL\\\\FileSystemSimulator\\\\frontend\\\\src\\\\components\\\\FileExplorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fileSystemService, authService } from '../api';\nimport { FaFolder, FaFile, FaArrowUp, FaTrash, FaEdit, FaPen, FaSave, FaMicrophone, FaCheck, FaSun, FaMoon } from 'react-icons/fa';\nimport './FileExplorer.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileExplorer = () => {\n  _s();\n  var _files$find;\n  const [files, setFiles] = useState([]);\n  const [currentDir, setCurrentDir] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showCreateFolder, setShowCreateFolder] = useState(false);\n  const [showCreateFile, setShowCreateFile] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [newFileName, setNewFileName] = useState('');\n  const [newFileContent, setNewFileContent] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [voiceActive, setVoiceActive] = useState(false);\n  const [voiceText, setVoiceText] = useState('');\n  const [recognitionInterval, setRecognitionInterval] = useState(null);\n  const [successNotification, setSuccessNotification] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n  const [itemToRename, setItemToRename] = useState(null);\n  const [newItemName, setNewItemName] = useState('');\n  const navigate = useNavigate();\n  const fetchFiles = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // Fetch current directory first\n      console.log('Fetching current directory...');\n      const dirResponse = await fileSystemService.getCurrentDirectory();\n      console.log('Current directory response:', dirResponse);\n      if (dirResponse.data) {\n        setCurrentDir(dirResponse.data);\n        console.log('Current directory set to:', dirResponse.data);\n      } else {\n        console.warn('Unexpected current directory response format:', dirResponse);\n      }\n\n      // Then fetch files in that directory\n      console.log('Fetching files in directory...');\n      const response = await fileSystemService.listFiles();\n      console.log('List files raw response:', response);\n\n      // Check if the response has an items property\n      if (response.data && response.data.items) {\n        console.log('Files list received:', response.data.items);\n        setFiles(response.data.items);\n      } else {\n        // Try to parse the response if it's a string\n        try {\n          if (typeof response.data === 'string') {\n            const parsedData = JSON.parse(response.data);\n            if (parsedData.items) {\n              console.log('Files list parsed from string:', parsedData.items);\n              setFiles(parsedData.items);\n              return;\n            }\n          }\n        } catch (parseErr) {\n          console.error('Failed to parse response data:', parseErr);\n        }\n\n        // Handle the case when the response doesn't have the expected format\n        console.error('Unexpected response format:', response.data);\n        setFiles([]);\n        setError('Unexpected response format from server');\n      }\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error('Error fetching files:', err);\n      setError('Failed to load files: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message));\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        // Handle unauthorized\n        console.warn('Unauthorized access detected, logging out...');\n        handleLogout();\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchFiles();\n\n    // Set up initial theme based on local storage\n    const savedTheme = localStorage.getItem('darkMode');\n    if (savedTheme === 'true') {\n      setDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, [fetchFiles]);\n\n  // Separate useEffect for welcome notification to prevent it from showing on every render\n  useEffect(() => {\n    // Show welcome notification only on initial load\n    const hasShownWelcome = sessionStorage.getItem('welcomeShown');\n    if (!hasShownWelcome) {\n      setTimeout(() => {\n        setSuccessNotification(\"Welcome to File System Simulator!\");\n        setTimeout(() => setSuccessNotification(null), 5000);\n        sessionStorage.setItem('welcomeShown', 'true');\n      }, 1000);\n    }\n  }, []);\n  const handleStartVoiceCommand = async () => {\n    try {\n      setError('');\n\n      // If already listening, stop the voice command\n      if (voiceActive) {\n        console.log('Stopping voice command...');\n\n        // Call the stop endpoint\n        try {\n          await fileSystemService.stopVoiceCommand();\n          console.log('Voice command stopped via API');\n        } catch (err) {\n          console.error('Error stopping voice command:', err);\n        }\n        setVoiceActive(false);\n        setVoiceText('Voice command stopped');\n\n        // Clear any existing polling interval\n        if (recognitionInterval) {\n          console.log('Clearing polling interval');\n          clearInterval(recognitionInterval);\n          setRecognitionInterval(null);\n        }\n\n        // Clear voice text after a delay\n        setTimeout(() => {\n          setVoiceText('');\n        }, 2000);\n        return;\n      }\n\n      // Start new voice command session\n      setVoiceActive(true);\n      setVoiceText('Listening...');\n\n      // Start voice command on backend\n      console.log('Initiating voice command on backend...');\n      const response = await fileSystemService.startVoiceCommand();\n      console.log('Voice command response:', response);\n\n      // Poll for voice recognition updates\n      console.log('Setting up polling for voice status updates...');\n      const interval = setInterval(async () => {\n        try {\n          // Only continue polling if still in voice active mode\n          if (!voiceActive) {\n            console.log('Voice recognition no longer active, stopping polling');\n            clearInterval(interval);\n            setRecognitionInterval(null);\n            return;\n          }\n          console.log('Polling for voice status...');\n          const voiceStatusResponse = await fileSystemService.getVoiceStatus();\n          console.log('Voice status response:', voiceStatusResponse.data);\n          if (voiceStatusResponse.data && voiceStatusResponse.data.text) {\n            const currentStatus = voiceStatusResponse.data.text;\n\n            // Debug the exact status received\n            console.log('RECEIVED STATUS TEXT:', JSON.stringify(currentStatus));\n\n            // PRIORITY 1: Check for special formatted messages first (exact match format)\n            if (currentStatus.startsWith('FOLDER_CREATED_') || currentStatus.startsWith('FILE_CREATED_') || currentStatus.startsWith('RENAME_SUCCESS_')) {\n              let actionType = 'unknown';\n              let itemName = '';\n              let displayMessage = '';\n              if (currentStatus.startsWith('FOLDER_CREATED_')) {\n                actionType = 'folder-create';\n                itemName = currentStatus.replace('FOLDER_CREATED_', '');\n                displayMessage = `Folder \"${itemName}\" created successfully!`;\n              } else if (currentStatus.startsWith('FILE_CREATED_')) {\n                actionType = 'file-create';\n                itemName = currentStatus.replace('FILE_CREATED_', '');\n                displayMessage = `File \"${itemName}\" created successfully!`;\n              } else if (currentStatus.startsWith('RENAME_SUCCESS_')) {\n                actionType = 'rename';\n                // Format is RENAME_SUCCESS_oldname_TO_newname\n                const renameParts = currentStatus.replace('RENAME_SUCCESS_', '').split('_TO_');\n                if (renameParts.length === 2) {\n                  displayMessage = `\"${renameParts[0]}\" renamed to \"${renameParts[1]}\" successfully!`;\n                } else {\n                  displayMessage = \"Item renamed successfully!\";\n                }\n              }\n\n              // Use actionType for analytics or logging purposes\n              console.log('SUCCESS DETECTED - SPECIAL FORMAT:', displayMessage, 'Action type:', actionType);\n\n              // Force refresh files\n              await fetchFiles();\n\n              // Set success notification with formatted message\n              setSuccessNotification(displayMessage);\n              setTimeout(() => setSuccessNotification(null), 6000);\n            }\n            // PRIORITY 2: Standard format success messages\n            else if (currentStatus.includes('SUCCESS') || currentStatus.includes('success') || currentStatus.includes('Folder created') || currentStatus.includes('File created')) {\n              console.log('SUCCESS DETECTED - STANDARD FORMAT:', currentStatus);\n\n              // Force refresh files\n              await fetchFiles();\n\n              // Set success notification with the exact message\n              setSuccessNotification(currentStatus);\n              setTimeout(() => setSuccessNotification(null), 6000);\n            }\n\n            // Always update the voice text display\n            setVoiceText(currentStatus);\n\n            // If the command is completed, restart voice recognition\n            if (voiceStatusResponse.data.completed) {\n              console.log('Voice command completed, starting a new listening session');\n              await fileSystemService.startVoiceCommand();\n            }\n          }\n        } catch (err) {\n          console.error('Error getting voice status:', err);\n        }\n      }, 300); // Poll frequently for better responsiveness\n\n      setRecognitionInterval(interval);\n    } catch (err) {\n      console.error('Failed to start voice command:', err);\n      setError('Failed to start voice command');\n      setVoiceActive(false);\n      setVoiceText('');\n    }\n  };\n\n  // Clean up interval on component unmount\n  useEffect(() => {\n    return () => {\n      if (recognitionInterval) {\n        clearInterval(recognitionInterval);\n      }\n    };\n  }, [recognitionInterval]);\n  const handleLogout = () => {\n    try {\n      console.log('Logging out...');\n      // First clear the auth data\n      authService.logout();\n      console.log('Auth data cleared');\n\n      // Force navigation to login page and reload to reset state\n      console.log('Redirecting to login page');\n      window.location.href = '/';\n    } catch (err) {\n      console.error('Logout error:', err);\n      // Fallback navigation\n      navigate('/');\n    }\n  };\n  const handleNavigate = async path => {\n    try {\n      console.log('Navigating to:', path);\n      const response = await fileSystemService.changeDirectory(path);\n      console.log('Navigation response:', response);\n\n      // Reset file state\n      setSelectedFile(null);\n      setFileContent('');\n      setEditMode(false);\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response3;\n      console.error(`Failed to navigate to ${path}:`, err);\n      setError(`Failed to navigate to ${path}: ${((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message}`);\n    }\n  };\n  const handleNavigateUp = async () => {\n    try {\n      console.log('Navigating up...');\n      const response = await fileSystemService.moveUpDirectory();\n      console.log('Navigate up response:', response);\n\n      // Reset file state\n      setSelectedFile(null);\n      setFileContent('');\n      setEditMode(false);\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response4;\n      console.error('Failed to navigate up:', err);\n      setError(`Failed to navigate up: ${((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || err.message}`);\n    }\n  };\n  const handleCreateFolder = async () => {\n    if (!newFolderName.trim()) {\n      setError('Folder name cannot be empty');\n      return;\n    }\n    try {\n      setError('');\n      console.log('Creating folder:', newFolderName);\n      const response = await fileSystemService.createDirectory(newFolderName);\n      console.log('Create folder response:', response);\n      setNewFolderName('');\n      setShowCreateFolder(false);\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response5;\n      console.error('Failed to create folder:', err);\n      setError('Failed to create folder: ' + (((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.data) || err.message));\n    }\n  };\n  const handleCreateFile = async () => {\n    if (!newFileName.trim()) {\n      setError('File name cannot be empty');\n      return;\n    }\n    try {\n      setError('');\n      console.log('Creating file:', newFileName, 'with content:', newFileContent);\n      const response = await fileSystemService.createFile(newFileName, newFileContent);\n      console.log('Create file response:', response);\n      setNewFileName('');\n      setNewFileContent('');\n      setShowCreateFile(false);\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response6;\n      console.error('Failed to create file:', err);\n      setError('Failed to create file: ' + (((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.data) || err.message));\n    }\n  };\n  const handleDeleteItem = async (name, isDirectory) => {\n    try {\n      if (isDirectory) {\n        console.log('Deleting directory:', name);\n        const response = await fileSystemService.deleteDirectory(name);\n        console.log('Delete directory response:', response);\n      } else {\n        console.log('Deleting file:', name);\n        const response = await fileSystemService.deleteFile(name);\n        console.log('Delete file response:', response);\n      }\n\n      // Refresh the file list\n      await fetchFiles();\n      if (selectedFile === name) {\n        setSelectedFile(null);\n        setFileContent('');\n        setEditMode(false);\n      }\n    } catch (err) {\n      var _err$response7;\n      console.error(`Failed to delete ${isDirectory ? 'folder' : 'file'}:`, err);\n      setError(`Failed to delete ${isDirectory ? 'folder' : 'file'}: ${((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : _err$response7.data) || err.message}`);\n    }\n  };\n  const handleFileClick = async fileName => {\n    try {\n      setError('');\n      console.log('Reading file:', fileName);\n      setSelectedFile(fileName);\n      setEditMode(false);\n      const response = await fileSystemService.readFile(fileName);\n      console.log('Read file response status:', response.status);\n      setFileContent(response.data);\n    } catch (err) {\n      var _err$response8;\n      console.error('Failed to read file:', err);\n      setError('Failed to read file: ' + (((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : _err$response8.data) || err.message));\n      setFileContent('');\n    }\n  };\n  const handleSaveFile = async () => {\n    try {\n      setError('');\n      console.log('Saving file:', selectedFile);\n      const response = await fileSystemService.editFile(selectedFile, fileContent);\n      console.log('Save file response:', response);\n      setEditMode(false);\n\n      // Optionally refresh the file list after saving\n      await fetchFiles();\n    } catch (err) {\n      var _err$response9;\n      console.error('Failed to save file:', err);\n      setError('Failed to save file: ' + (((_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : _err$response9.data) || err.message));\n    }\n  };\n  const updateVoiceStatus = useCallback(() => {\n    if (voiceActive) {\n      console.log(\"Polling for voice status...\");\n      fileSystemService.getVoiceStatus().then(response => {\n        console.log(\"Voice status response:\", response.data);\n        const currentStatus = response.data.text || \"\";\n        const isCompleted = response.data.completed || false;\n\n        // Update voice text with current status\n        setVoiceText(currentStatus);\n\n        // Check for success messages explicitly\n        if (currentStatus.includes(\"Folder created\") || currentStatus.includes(\"File created\") || currentStatus.includes(\"File opened\") || currentStatus.includes(\"Item deleted\")) {\n          console.log(\"SUCCESS DETECTED:\", currentStatus);\n\n          // Set success notification with the message\n          setSuccessNotification(currentStatus);\n\n          // Refresh the file list to show new changes\n          fetchFiles();\n\n          // Clear success notification after 10 seconds\n          setTimeout(() => {\n            setSuccessNotification(null);\n          }, 10000);\n        }\n\n        // Handle completion\n        if (isCompleted) {\n          console.log(\"Voice command completed\");\n          setTimeout(() => {\n            setVoiceActive(false);\n            setVoiceText(null);\n          }, 3000); // Keep final message visible for 3 seconds\n        }\n      });\n    }\n  }, [voiceActive, fetchFiles]);\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('darkMode', newMode);\n      if (newMode) {\n        document.body.classList.add('dark-mode');\n      } else {\n        document.body.classList.remove('dark-mode');\n      }\n      return newMode;\n    });\n  };\n\n  // Enhanced function to specifically handle voice commands\n  // This function is defined for future expansion of voice command features\n  // and can be called from handleStartVoiceCommand as needed\n  const processVoiceCommandStatus = async status => {\n    console.log('Processing voice command status:', status);\n\n    // Explicit check for SUCCESS messages (case insensitive)\n    if (status.includes('SUCCESS') || status.includes('success')) {\n      console.log('SUCCESS DETECTED - Setting notification:', status);\n      setSuccessNotification(status);\n      setTimeout(() => setSuccessNotification(null), 8000); // longer display\n      await fetchFiles();\n      return true;\n    }\n\n    // Check for creation/action commands\n    if (status.includes('created') || status.includes('deleted') || status.includes('opened') || status.includes('navigated')) {\n      console.log('ACTION DETECTED IN VOICE COMMAND:', status);\n\n      // Show success notification\n      setSuccessNotification(status);\n      setTimeout(() => setSuccessNotification(null), 5000);\n\n      // Refresh files to show changes\n      await fetchFiles();\n      return true;\n    }\n    return false;\n  };\n\n  // Add a more robust useEffect to handle success notifications\n  useEffect(() => {\n    if (successNotification) {\n      console.log('SUCCESS NOTIFICATION SET TO:', successNotification);\n\n      // Keep only one notification active at a time - clear any existing timeouts\n      if (window.successNotificationTimeout) {\n        console.log('Clearing existing timeout');\n        clearTimeout(window.successNotificationTimeout);\n      }\n\n      // Store the new timeout for later reference\n      window.successNotificationTimeout = setTimeout(() => {\n        console.log('Success notification timeout fired, clearing notification');\n        setSuccessNotification(null);\n      }, 8000); // Increased to 8 seconds for better visibility\n\n      // Check if the notification element exists\n      setTimeout(() => {\n        const notificationElement = document.querySelector('.success-notification');\n        if (notificationElement) {\n          console.log('Success notification found in DOM:', notificationElement);\n        } else {\n          console.error('SUCCESS NOTIFICATION NOT FOUND IN DOM!');\n        }\n      }, 100); // Short delay to check after render\n    } else {\n      console.log('Success notification cleared');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (window.successNotificationTimeout) {\n        clearTimeout(window.successNotificationTimeout);\n      }\n    };\n  }, [successNotification]);\n\n  // Set notification function for testing from console\n  useEffect(() => {\n    // Expose a function to test setting notifications from the console\n    window.testNotification = message => {\n      console.log(`Setting test notification: ${message}`);\n      setSuccessNotification(message);\n      setTimeout(() => setSuccessNotification(null), 5000);\n    };\n    return () => {\n      delete window.testNotification;\n    };\n  }, []);\n  const handleRenameItem = async () => {\n    if (!itemToRename || !newItemName.trim()) {\n      return;\n    }\n    try {\n      setError('');\n      console.log(`Renaming ${itemToRename} to ${newItemName}`);\n\n      // Call the API to rename the item\n      const response = await fileSystemService.renameItem(itemToRename, newItemName);\n      console.log('Rename response:', response);\n\n      // Set success notification\n      setSuccessNotification(`Renamed ${itemToRename} to ${newItemName} successfully`);\n      setTimeout(() => setSuccessNotification(null), 5000);\n\n      // Reset state\n      setItemToRename(null);\n      setNewItemName('');\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response10;\n      console.error('Error renaming item:', err);\n      setError('Failed to rename item: ' + (((_err$response10 = err.response) === null || _err$response10 === void 0 ? void 0 : _err$response10.data) || err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [successNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-notification\",\n      children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this), \" \", successNotification]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `file-explorer ${darkMode ? 'dark-mode' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explorer-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"File System Explorer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"theme-toggle-btn\",\n            onClick: toggleDarkMode,\n            title: darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\",\n            children: darkMode ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartVoiceCommand,\n            className: `action-btn ${voiceActive ? 'active' : ''}`,\n            title: voiceActive ? \"Stop Voice Command\" : \"Start Voice Command\",\n            children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 15\n            }, this), \" \", voiceActive ? 'Stop' : 'Voice']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"action-btn\",\n            title: \"Logout\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 19\n      }, this), voiceText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `voice-text ${voiceText.includes(\"Listening\") ? \"listening\" : voiceText.includes(\"Recognized:\") ? \"recognized\" : voiceText.includes(\"ERROR\") || voiceText.includes(\"Failed\") || voiceText.includes(\"Error\") ? \"error\" : voiceText.includes(\"SUCCESS\") || voiceText.includes(\"created\") || voiceText.includes(\"Navigated\") || voiceText.includes(\"Deleted\") ? \"success\" : voiceText.includes(\"Processing\") ? \"processing\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {\n            className: \"voice-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this), \" \", voiceText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-path\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Path:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), \" \", currentDir]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNavigateUp,\n          className: \"nav-btn\",\n          children: [/*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this), \" Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateFolder(true),\n          className: \"action-btn\",\n          children: [/*#__PURE__*/_jsxDEV(FaFolder, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this), \" New Folder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateFile(true),\n          className: \"action-btn\",\n          children: [/*#__PURE__*/_jsxDEV(FaFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this), \" New File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this), showCreateFolder && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Folder Name\",\n            value: newFolderName,\n            onChange: e => setNewFolderName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreateFolder,\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCreateFolder(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 11\n      }, this), showCreateFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"File Name\",\n            value: newFileName,\n            onChange: e => setNewFileName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"File Content\",\n            value: newFileContent,\n            onChange: e => setNewFileContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreateFile,\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCreateFile(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this), itemToRename && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: ((_files$find = files.find(item => item.name === itemToRename)) === null || _files$find === void 0 ? void 0 : _files$find.type) === 'directory' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FaFolder, {\n                className: \"modal-icon folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 23\n              }, this), \" Rename Folder\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FaFile, {\n                className: \"modal-icon file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 23\n              }, this), \" Rename File\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Current Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"current-name\",\n                children: itemToRename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"New Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newItemName,\n                onChange: e => setNewItemName(e.target.value),\n                placeholder: \"Enter new name\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRenameItem,\n              disabled: !newItemName.trim() || newItemName === itemToRename,\n              children: \"Rename\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setItemToRename(null);\n                setNewItemName('');\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explorer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Files and Folders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: files.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"empty-message\",\n              children: \"No files or folders found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 19\n            }, this) : files.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `file-item ${selectedFile === item.name ? 'selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-name\",\n                onClick: () => item.type === 'directory' ? handleNavigate(item.name) : handleFileClick(item.name),\n                children: [item.type === 'directory' ? /*#__PURE__*/_jsxDEV(FaFolder, {\n                  className: \"icon folder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 54\n                }, this) : /*#__PURE__*/_jsxDEV(FaFile, {\n                  className: \"icon file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 93\n                }, this), item.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    setItemToRename(item.name);\n                    setNewItemName(item.name);\n                  },\n                  className: \"file-action-btn rename\",\n                  title: \"Rename\",\n                  children: /*#__PURE__*/_jsxDEV(FaPen, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDeleteItem(item.name, item.type === 'directory');\n                  },\n                  className: \"file-action-btn delete\",\n                  title: \"Delete\",\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 796,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 23\n              }, this)]\n            }, item.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"File: \", selectedFile]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-preview-actions\",\n                children: editMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleSaveFile,\n                  className: \"edit-btn save\",\n                  children: [/*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 25\n                  }, this), \" Save\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setEditMode(true),\n                  className: \"edit-btn\",\n                  children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 25\n                  }, this), \" Edit\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : 'Select a file to preview'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this), selectedFile && (editMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"file-content-editor\",\n            value: fileContent,\n            onChange: e => setFileContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"file-content\",\n            children: fileContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FileExplorer, \"ECeHbdSg4qyZOVIo/a4WPfyX14k=\", false, function () {\n  return [useNavigate];\n});\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","fileSystemService","authService","FaFolder","FaFile","FaArrowUp","FaTrash","FaEdit","FaPen","FaSave","FaMicrophone","FaCheck","FaSun","FaMoon","jsxDEV","_jsxDEV","Fragment","_Fragment","FileExplorer","_s","_files$find","files","setFiles","currentDir","setCurrentDir","loading","setLoading","error","setError","showCreateFolder","setShowCreateFolder","showCreateFile","setShowCreateFile","newFolderName","setNewFolderName","newFileName","setNewFileName","newFileContent","setNewFileContent","selectedFile","setSelectedFile","fileContent","setFileContent","editMode","setEditMode","voiceActive","setVoiceActive","voiceText","setVoiceText","recognitionInterval","setRecognitionInterval","successNotification","setSuccessNotification","darkMode","setDarkMode","itemToRename","setItemToRename","newItemName","setNewItemName","navigate","fetchFiles","console","log","dirResponse","getCurrentDirectory","data","warn","response","listFiles","items","parsedData","JSON","parse","parseErr","err","_err$response","_err$response2","message","status","handleLogout","savedTheme","localStorage","getItem","document","body","classList","add","hasShownWelcome","sessionStorage","setTimeout","setItem","handleStartVoiceCommand","stopVoiceCommand","clearInterval","startVoiceCommand","interval","setInterval","voiceStatusResponse","getVoiceStatus","text","currentStatus","stringify","startsWith","actionType","itemName","displayMessage","replace","renameParts","split","length","includes","completed","logout","window","location","href","handleNavigate","path","changeDirectory","_err$response3","handleNavigateUp","moveUpDirectory","_err$response4","handleCreateFolder","trim","createDirectory","_err$response5","handleCreateFile","createFile","_err$response6","handleDeleteItem","name","isDirectory","deleteDirectory","deleteFile","_err$response7","handleFileClick","fileName","readFile","_err$response8","handleSaveFile","editFile","_err$response9","updateVoiceStatus","then","isCompleted","toggleDarkMode","prevMode","newMode","remove","processVoiceCommandStatus","successNotificationTimeout","clearTimeout","notificationElement","querySelector","testNotification","handleRenameItem","renameItem","_err$response10","children","className","_jsxFileName","lineNumber","columnNumber","onClick","title","type","placeholder","value","onChange","e","target","find","item","autoFocus","disabled","map","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/marco/OneDrive/Desktop/GIT_PBL_FINAL/FileSystemSimulator/frontend/src/components/FileExplorer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fileSystemService, authService } from '../api';\r\nimport { FaFolder, FaFile, FaArrowUp, FaTrash, FaEdit, FaPen, FaSave, FaMicrophone, FaCheck, FaSun, FaMoon } from 'react-icons/fa';\r\nimport './FileExplorer.css';\r\n\r\nconst FileExplorer = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [currentDir, setCurrentDir] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [showCreateFolder, setShowCreateFolder] = useState(false);\r\n  const [showCreateFile, setShowCreateFile] = useState(false);\r\n  const [newFolderName, setNewFolderName] = useState('');\r\n  const [newFileName, setNewFileName] = useState('');\r\n  const [newFileContent, setNewFileContent] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileContent, setFileContent] = useState('');\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [voiceActive, setVoiceActive] = useState(false);\r\n  const [voiceText, setVoiceText] = useState('');\r\n  const [recognitionInterval, setRecognitionInterval] = useState(null);\r\n  const [successNotification, setSuccessNotification] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [itemToRename, setItemToRename] = useState(null);\r\n  const [newItemName, setNewItemName] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const fetchFiles = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      // Fetch current directory first\r\n      console.log('Fetching current directory...');\r\n      const dirResponse = await fileSystemService.getCurrentDirectory();\r\n      console.log('Current directory response:', dirResponse);\r\n      \r\n      if (dirResponse.data) {\r\n        setCurrentDir(dirResponse.data);\r\n        console.log('Current directory set to:', dirResponse.data);\r\n      } else {\r\n        console.warn('Unexpected current directory response format:', dirResponse);\r\n      }\r\n      \r\n      // Then fetch files in that directory\r\n      console.log('Fetching files in directory...');\r\n      const response = await fileSystemService.listFiles();\r\n      console.log('List files raw response:', response);\r\n      \r\n      // Check if the response has an items property\r\n      if (response.data && response.data.items) {\r\n        console.log('Files list received:', response.data.items);\r\n        setFiles(response.data.items);\r\n      } else {\r\n        // Try to parse the response if it's a string\r\n        try {\r\n          if (typeof response.data === 'string') {\r\n            const parsedData = JSON.parse(response.data);\r\n            if (parsedData.items) {\r\n              console.log('Files list parsed from string:', parsedData.items);\r\n              setFiles(parsedData.items);\r\n              return;\r\n            }\r\n          }\r\n        } catch (parseErr) {\r\n          console.error('Failed to parse response data:', parseErr);\r\n        }\r\n        \r\n        // Handle the case when the response doesn't have the expected format\r\n        console.error('Unexpected response format:', response.data);\r\n        setFiles([]);\r\n        setError('Unexpected response format from server');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n      setError('Failed to load files: ' + (err.response?.data || err.message));\r\n      if (err.response?.status === 401) {\r\n        // Handle unauthorized\r\n        console.warn('Unauthorized access detected, logging out...');\r\n        handleLogout();\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n    \r\n    // Set up initial theme based on local storage\r\n    const savedTheme = localStorage.getItem('darkMode');\r\n    if (savedTheme === 'true') {\r\n      setDarkMode(true);\r\n      document.body.classList.add('dark-mode');\r\n    }\r\n  }, [fetchFiles]);\r\n\r\n  // Separate useEffect for welcome notification to prevent it from showing on every render\r\n  useEffect(() => {\r\n    // Show welcome notification only on initial load\r\n    const hasShownWelcome = sessionStorage.getItem('welcomeShown');\r\n    if (!hasShownWelcome) {\r\n      setTimeout(() => {\r\n        setSuccessNotification(\"Welcome to File System Simulator!\");\r\n        setTimeout(() => setSuccessNotification(null), 5000);\r\n        sessionStorage.setItem('welcomeShown', 'true');\r\n      }, 1000);\r\n    }\r\n  }, []);\r\n\r\n  const handleStartVoiceCommand = async () => {\r\n    try {\r\n      setError('');\r\n      \r\n      // If already listening, stop the voice command\r\n      if (voiceActive) {\r\n        console.log('Stopping voice command...');\r\n        \r\n        // Call the stop endpoint\r\n        try {\r\n          await fileSystemService.stopVoiceCommand();\r\n          console.log('Voice command stopped via API');\r\n        } catch (err) {\r\n          console.error('Error stopping voice command:', err);\r\n        }\r\n        \r\n        setVoiceActive(false);\r\n        setVoiceText('Voice command stopped');\r\n        \r\n        // Clear any existing polling interval\r\n        if (recognitionInterval) {\r\n          console.log('Clearing polling interval');\r\n          clearInterval(recognitionInterval);\r\n          setRecognitionInterval(null);\r\n        }\r\n        \r\n        // Clear voice text after a delay\r\n        setTimeout(() => {\r\n          setVoiceText('');\r\n        }, 2000);\r\n        \r\n        return;\r\n      }\r\n      \r\n      // Start new voice command session\r\n      setVoiceActive(true);\r\n      setVoiceText('Listening...');\r\n      \r\n      // Start voice command on backend\r\n      console.log('Initiating voice command on backend...');\r\n      const response = await fileSystemService.startVoiceCommand();\r\n      console.log('Voice command response:', response);\r\n      \r\n      // Poll for voice recognition updates\r\n      console.log('Setting up polling for voice status updates...');\r\n      const interval = setInterval(async () => {\r\n        try {\r\n          // Only continue polling if still in voice active mode\r\n          if (!voiceActive) {\r\n            console.log('Voice recognition no longer active, stopping polling');\r\n            clearInterval(interval);\r\n            setRecognitionInterval(null);\r\n            return;\r\n          }\r\n          \r\n          console.log('Polling for voice status...');\r\n          const voiceStatusResponse = await fileSystemService.getVoiceStatus();\r\n          console.log('Voice status response:', voiceStatusResponse.data);\r\n          \r\n          if (voiceStatusResponse.data && voiceStatusResponse.data.text) {\r\n            const currentStatus = voiceStatusResponse.data.text;\r\n            \r\n            // Debug the exact status received\r\n            console.log('RECEIVED STATUS TEXT:', JSON.stringify(currentStatus));\r\n            \r\n            // PRIORITY 1: Check for special formatted messages first (exact match format)\r\n            if (currentStatus.startsWith('FOLDER_CREATED_') || \r\n                currentStatus.startsWith('FILE_CREATED_') ||\r\n                currentStatus.startsWith('RENAME_SUCCESS_')) {\r\n              \r\n              let actionType = 'unknown';\r\n              let itemName = '';\r\n              let displayMessage = '';\r\n              \r\n              if (currentStatus.startsWith('FOLDER_CREATED_')) {\r\n                actionType = 'folder-create';\r\n                itemName = currentStatus.replace('FOLDER_CREATED_', '');\r\n                displayMessage = `Folder \"${itemName}\" created successfully!`;\r\n              } else if (currentStatus.startsWith('FILE_CREATED_')) {\r\n                actionType = 'file-create';\r\n                itemName = currentStatus.replace('FILE_CREATED_', '');\r\n                displayMessage = `File \"${itemName}\" created successfully!`;\r\n              } else if (currentStatus.startsWith('RENAME_SUCCESS_')) {\r\n                actionType = 'rename';\r\n                // Format is RENAME_SUCCESS_oldname_TO_newname\r\n                const renameParts = currentStatus.replace('RENAME_SUCCESS_', '').split('_TO_');\r\n                if (renameParts.length === 2) {\r\n                  displayMessage = `\"${renameParts[0]}\" renamed to \"${renameParts[1]}\" successfully!`;\r\n                } else {\r\n                  displayMessage = \"Item renamed successfully!\";\r\n                }\r\n              }\r\n              \r\n              // Use actionType for analytics or logging purposes\r\n              console.log('SUCCESS DETECTED - SPECIAL FORMAT:', displayMessage, 'Action type:', actionType);\r\n              \r\n              // Force refresh files\r\n              await fetchFiles();\r\n              \r\n              // Set success notification with formatted message\r\n              setSuccessNotification(displayMessage);\r\n              setTimeout(() => setSuccessNotification(null), 6000);\r\n            }\r\n            // PRIORITY 2: Standard format success messages\r\n            else if (currentStatus.includes('SUCCESS') || \r\n                currentStatus.includes('success') ||\r\n                currentStatus.includes('Folder created') || \r\n                currentStatus.includes('File created')) {\r\n              \r\n              console.log('SUCCESS DETECTED - STANDARD FORMAT:', currentStatus);\r\n              \r\n              // Force refresh files\r\n              await fetchFiles();\r\n              \r\n              // Set success notification with the exact message\r\n              setSuccessNotification(currentStatus);\r\n              setTimeout(() => setSuccessNotification(null), 6000);\r\n            }\r\n            \r\n            // Always update the voice text display\r\n            setVoiceText(currentStatus);\r\n            \r\n            // If the command is completed, restart voice recognition\r\n            if (voiceStatusResponse.data.completed) {\r\n              console.log('Voice command completed, starting a new listening session');\r\n              await fileSystemService.startVoiceCommand();\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error('Error getting voice status:', err);\r\n        }\r\n      }, 300); // Poll frequently for better responsiveness\r\n      \r\n      setRecognitionInterval(interval);\r\n      \r\n    } catch (err) {\r\n      console.error('Failed to start voice command:', err);\r\n      setError('Failed to start voice command');\r\n      setVoiceActive(false);\r\n      setVoiceText('');\r\n    }\r\n  };\r\n\r\n  // Clean up interval on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (recognitionInterval) {\r\n        clearInterval(recognitionInterval);\r\n      }\r\n    };\r\n  }, [recognitionInterval]);\r\n\r\n  const handleLogout = () => {\r\n    try {\r\n      console.log('Logging out...');\r\n      // First clear the auth data\r\n      authService.logout();\r\n      console.log('Auth data cleared');\r\n      \r\n      // Force navigation to login page and reload to reset state\r\n      console.log('Redirecting to login page');\r\n      window.location.href = '/';\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      // Fallback navigation\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  const handleNavigate = async (path) => {\r\n    try {\r\n      console.log('Navigating to:', path);\r\n      const response = await fileSystemService.changeDirectory(path);\r\n      console.log('Navigation response:', response);\r\n      \r\n      // Reset file state\r\n      setSelectedFile(null);\r\n      setFileContent('');\r\n      setEditMode(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error(`Failed to navigate to ${path}:`, err);\r\n      setError(`Failed to navigate to ${path}: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleNavigateUp = async () => {\r\n    try {\r\n      console.log('Navigating up...');\r\n      const response = await fileSystemService.moveUpDirectory();\r\n      console.log('Navigate up response:', response);\r\n      \r\n      // Reset file state\r\n      setSelectedFile(null);\r\n      setFileContent('');\r\n      setEditMode(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to navigate up:', err);\r\n      setError(`Failed to navigate up: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateFolder = async () => {\r\n    if (!newFolderName.trim()) {\r\n      setError('Folder name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      console.log('Creating folder:', newFolderName);\r\n      const response = await fileSystemService.createDirectory(newFolderName);\r\n      console.log('Create folder response:', response);\r\n      setNewFolderName('');\r\n      setShowCreateFolder(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to create folder:', err);\r\n      setError('Failed to create folder: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const handleCreateFile = async () => {\r\n    if (!newFileName.trim()) {\r\n      setError('File name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      console.log('Creating file:', newFileName, 'with content:', newFileContent);\r\n      const response = await fileSystemService.createFile(newFileName, newFileContent);\r\n      console.log('Create file response:', response);\r\n      setNewFileName('');\r\n      setNewFileContent('');\r\n      setShowCreateFile(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to create file:', err);\r\n      setError('Failed to create file: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = async (name, isDirectory) => {\r\n    try {\r\n      if (isDirectory) {\r\n        console.log('Deleting directory:', name);\r\n        const response = await fileSystemService.deleteDirectory(name);\r\n        console.log('Delete directory response:', response);\r\n      } else {\r\n        console.log('Deleting file:', name);\r\n        const response = await fileSystemService.deleteFile(name);\r\n        console.log('Delete file response:', response);\r\n      }\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n      \r\n      if (selectedFile === name) {\r\n        setSelectedFile(null);\r\n        setFileContent('');\r\n        setEditMode(false);\r\n      }\r\n    } catch (err) {\r\n      console.error(`Failed to delete ${isDirectory ? 'folder' : 'file'}:`, err);\r\n      setError(`Failed to delete ${isDirectory ? 'folder' : 'file'}: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleFileClick = async (fileName) => {\r\n    try {\r\n      setError('');\r\n      console.log('Reading file:', fileName);\r\n      setSelectedFile(fileName);\r\n      setEditMode(false);\r\n      \r\n      const response = await fileSystemService.readFile(fileName);\r\n      console.log('Read file response status:', response.status);\r\n      setFileContent(response.data);\r\n    } catch (err) {\r\n      console.error('Failed to read file:', err);\r\n      setError('Failed to read file: ' + (err.response?.data || err.message));\r\n      setFileContent('');\r\n    }\r\n  };\r\n\r\n  const handleSaveFile = async () => {\r\n    try {\r\n      setError('');\r\n      console.log('Saving file:', selectedFile);\r\n      const response = await fileSystemService.editFile(selectedFile, fileContent);\r\n      console.log('Save file response:', response);\r\n      setEditMode(false);\r\n      \r\n      // Optionally refresh the file list after saving\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to save file:', err);\r\n      setError('Failed to save file: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const updateVoiceStatus = useCallback(() => {\r\n    if (voiceActive) {\r\n      console.log(\"Polling for voice status...\");\r\n      \r\n      fileSystemService.getVoiceStatus()\r\n        .then(response => {\r\n          console.log(\"Voice status response:\", response.data);\r\n          const currentStatus = response.data.text || \"\";\r\n          const isCompleted = response.data.completed || false;\r\n          \r\n          // Update voice text with current status\r\n          setVoiceText(currentStatus);\r\n          \r\n          // Check for success messages explicitly\r\n          if (currentStatus.includes(\"Folder created\") || \r\n              currentStatus.includes(\"File created\") || \r\n              currentStatus.includes(\"File opened\") ||\r\n              currentStatus.includes(\"Item deleted\")) {\r\n            console.log(\"SUCCESS DETECTED:\", currentStatus);\r\n            \r\n            // Set success notification with the message\r\n            setSuccessNotification(currentStatus);\r\n            \r\n            // Refresh the file list to show new changes\r\n            fetchFiles();\r\n            \r\n            // Clear success notification after 10 seconds\r\n            setTimeout(() => {\r\n              setSuccessNotification(null);\r\n            }, 10000);\r\n          }\r\n          \r\n          // Handle completion\r\n          if (isCompleted) {\r\n            console.log(\"Voice command completed\");\r\n            setTimeout(() => {\r\n              setVoiceActive(false);\r\n              setVoiceText(null);\r\n            }, 3000); // Keep final message visible for 3 seconds\r\n          }\r\n        });\r\n    }\r\n  }, [voiceActive, fetchFiles]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(prevMode => {\r\n      const newMode = !prevMode;\r\n      localStorage.setItem('darkMode', newMode);\r\n      \r\n      if (newMode) {\r\n        document.body.classList.add('dark-mode');\r\n      } else {\r\n        document.body.classList.remove('dark-mode');\r\n      }\r\n      \r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  // Enhanced function to specifically handle voice commands\r\n  // This function is defined for future expansion of voice command features\r\n  // and can be called from handleStartVoiceCommand as needed\r\n  const processVoiceCommandStatus = async (status) => {\r\n    console.log('Processing voice command status:', status);\r\n    \r\n    // Explicit check for SUCCESS messages (case insensitive)\r\n    if (status.includes('SUCCESS') || status.includes('success')) {\r\n      console.log('SUCCESS DETECTED - Setting notification:', status);\r\n      setSuccessNotification(status);\r\n      setTimeout(() => setSuccessNotification(null), 8000); // longer display\r\n      await fetchFiles();\r\n      return true;\r\n    }\r\n    \r\n    // Check for creation/action commands\r\n    if (status.includes('created') || \r\n        status.includes('deleted') || \r\n        status.includes('opened') ||\r\n        status.includes('navigated')) {\r\n      \r\n      console.log('ACTION DETECTED IN VOICE COMMAND:', status);\r\n      \r\n      // Show success notification\r\n      setSuccessNotification(status);\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n      \r\n      // Refresh files to show changes\r\n      await fetchFiles();\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Add a more robust useEffect to handle success notifications\r\n  useEffect(() => {\r\n    if (successNotification) {\r\n      console.log('SUCCESS NOTIFICATION SET TO:', successNotification);\r\n      \r\n      // Keep only one notification active at a time - clear any existing timeouts\r\n      if (window.successNotificationTimeout) {\r\n        console.log('Clearing existing timeout');\r\n        clearTimeout(window.successNotificationTimeout);\r\n      }\r\n      \r\n      // Store the new timeout for later reference\r\n      window.successNotificationTimeout = setTimeout(() => {\r\n        console.log('Success notification timeout fired, clearing notification');\r\n        setSuccessNotification(null);\r\n      }, 8000);  // Increased to 8 seconds for better visibility\r\n      \r\n      // Check if the notification element exists\r\n      setTimeout(() => {\r\n        const notificationElement = document.querySelector('.success-notification');\r\n        if (notificationElement) {\r\n          console.log('Success notification found in DOM:', notificationElement);\r\n        } else {\r\n          console.error('SUCCESS NOTIFICATION NOT FOUND IN DOM!');\r\n        }\r\n      }, 100);  // Short delay to check after render\r\n    } else {\r\n      console.log('Success notification cleared');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (window.successNotificationTimeout) {\r\n        clearTimeout(window.successNotificationTimeout);\r\n      }\r\n    };\r\n  }, [successNotification]);\r\n\r\n  // Set notification function for testing from console\r\n  useEffect(() => {\r\n    // Expose a function to test setting notifications from the console\r\n    window.testNotification = (message) => {\r\n      console.log(`Setting test notification: ${message}`);\r\n      setSuccessNotification(message);\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n    };\r\n    \r\n    return () => {\r\n      delete window.testNotification;\r\n    };\r\n  }, []);\r\n\r\n  const handleRenameItem = async () => {\r\n    if (!itemToRename || !newItemName.trim()) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      console.log(`Renaming ${itemToRename} to ${newItemName}`);\r\n      \r\n      // Call the API to rename the item\r\n      const response = await fileSystemService.renameItem(itemToRename, newItemName);\r\n      console.log('Rename response:', response);\r\n      \r\n      // Set success notification\r\n      setSuccessNotification(`Renamed ${itemToRename} to ${newItemName} successfully`);\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n      \r\n      // Reset state\r\n      setItemToRename(null);\r\n      setNewItemName('');\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Error renaming item:', err);\r\n      setError('Failed to rename item: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Success notification positioned outside the main container for maximum visibility */}\r\n      {successNotification && (\r\n        <div className=\"success-notification\">\r\n          <FaCheck /> {successNotification}\r\n        </div>\r\n      )}\r\n      \r\n      <div className={`file-explorer ${darkMode ? 'dark-mode' : ''}`}>\r\n        <div className=\"explorer-header\">\r\n          <h2>File System Explorer</h2>\r\n          <div className=\"header-actions\">\r\n            <button \r\n              className=\"theme-toggle-btn\" \r\n              onClick={toggleDarkMode} \r\n              title={darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n            >\r\n              {darkMode ? <FaSun /> : <FaMoon />}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleStartVoiceCommand} \r\n              className={`action-btn ${voiceActive ? 'active' : ''}`}\r\n              title={voiceActive ? \"Stop Voice Command\" : \"Start Voice Command\"}\r\n            >\r\n              <FaMicrophone /> {voiceActive ? 'Stop' : 'Voice'}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleLogout} \r\n              className=\"action-btn\"\r\n              title=\"Logout\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        {voiceText && (\r\n          <div className=\"voice-text-container\">\r\n            <div className={`voice-text ${\r\n              voiceText.includes(\"Listening\") ? \"listening\" :\r\n              voiceText.includes(\"Recognized:\") ? \"recognized\" :\r\n              voiceText.includes(\"ERROR\") || voiceText.includes(\"Failed\") || voiceText.includes(\"Error\") ? \"error\" :\r\n              voiceText.includes(\"SUCCESS\") || voiceText.includes(\"created\") || voiceText.includes(\"Navigated\") || voiceText.includes(\"Deleted\") ? \"success\" :\r\n              voiceText.includes(\"Processing\") ? \"processing\" :\r\n              \"\"\r\n            }`}>\r\n              <FaMicrophone className=\"voice-icon\" /> {voiceText}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"path-navigation\">\r\n          <div className=\"current-path\">\r\n            <strong>Current Path:</strong> {currentDir}\r\n          </div>\r\n          <button onClick={handleNavigateUp} className=\"nav-btn\">\r\n            <FaArrowUp /> Up\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"actions\">\r\n          <button onClick={() => setShowCreateFolder(true)} className=\"action-btn\">\r\n            <FaFolder /> New Folder\r\n          </button>\r\n          <button onClick={() => setShowCreateFile(true)} className=\"action-btn\">\r\n            <FaFile /> New File\r\n          </button>\r\n        </div>\r\n        \r\n        {showCreateFolder && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <h3>Create New Folder</h3>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Folder Name\"\r\n                value={newFolderName}\r\n                onChange={(e) => setNewFolderName(e.target.value)}\r\n              />\r\n              <div className=\"modal-actions\">\r\n                <button onClick={handleCreateFolder}>Create</button>\r\n                <button onClick={() => setShowCreateFolder(false)}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {showCreateFile && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <h3>Create New File</h3>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"File Name\"\r\n                value={newFileName}\r\n                onChange={(e) => setNewFileName(e.target.value)}\r\n              />\r\n              <textarea\r\n                placeholder=\"File Content\"\r\n                value={newFileContent}\r\n                onChange={(e) => setNewFileContent(e.target.value)}\r\n              />\r\n              <div className=\"modal-actions\">\r\n                <button onClick={handleCreateFile}>Create</button>\r\n                <button onClick={() => setShowCreateFile(false)}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {itemToRename && (\r\n          <div className=\"modal-backdrop\">\r\n            <div className=\"modal-content\">\r\n              <h3>\r\n                {/* Determine if it's a file or folder based on the file list */}\r\n                {files.find(item => item.name === itemToRename)?.type === 'directory' \r\n                  ? <><FaFolder className=\"modal-icon folder\" /> Rename Folder</>\r\n                  : <><FaFile className=\"modal-icon file\" /> Rename File</>\r\n                }\r\n              </h3>\r\n              <div className=\"modal-form\">\r\n                <div className=\"form-group\">\r\n                  <label>Current Name:</label>\r\n                  <div className=\"current-name\">{itemToRename}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>New Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newItemName}\r\n                    onChange={(e) => setNewItemName(e.target.value)}\r\n                    placeholder=\"Enter new name\"\r\n                    autoFocus\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-actions\">\r\n                <button \r\n                  onClick={handleRenameItem}\r\n                  disabled={!newItemName.trim() || newItemName === itemToRename}\r\n                >\r\n                  Rename\r\n                </button>\r\n                <button onClick={() => {\r\n                  setItemToRename(null);\r\n                  setNewItemName('');\r\n                }}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"explorer-container\">\r\n          <div className=\"file-list\">\r\n            <h3>Files and Folders</h3>\r\n            {loading ? (\r\n              <div className=\"loading\">Loading...</div>\r\n            ) : (\r\n              <ul>\r\n                {files.length === 0 ? (\r\n                  <li className=\"empty-message\">No files or folders found</li>\r\n                ) : (\r\n                  files.map((item) => (\r\n                    <li key={item.name} className={`file-item ${selectedFile === item.name ? 'selected' : ''}`}>\r\n                      <div \r\n                        className=\"file-name\"\r\n                        onClick={() => item.type === 'directory' \r\n                          ? handleNavigate(item.name) \r\n                          : handleFileClick(item.name)\r\n                        }\r\n                      >\r\n                        {item.type === 'directory' ? <FaFolder className=\"icon folder\" /> : <FaFile className=\"icon file\" />}\r\n                        {item.name}\r\n                      </div>\r\n                      <div className=\"file-actions\">\r\n                        <button \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setItemToRename(item.name);\r\n                            setNewItemName(item.name);\r\n                          }}\r\n                          className=\"file-action-btn rename\"\r\n                          title=\"Rename\"\r\n                        >\r\n                          <FaPen />\r\n                        </button>\r\n                        <button \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDeleteItem(item.name, item.type === 'directory');\r\n                          }}\r\n                          className=\"file-action-btn delete\"\r\n                          title=\"Delete\"\r\n                        >\r\n                          <FaTrash />\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"file-preview\">\r\n            <h3>\r\n              {selectedFile ? (\r\n                <>\r\n                  <span>File: {selectedFile}</span>\r\n                  <div className=\"file-preview-actions\">\r\n                    {editMode ? (\r\n                      <button onClick={handleSaveFile} className=\"edit-btn save\">\r\n                        <FaSave /> Save\r\n                      </button>\r\n                    ) : (\r\n                      <button onClick={() => setEditMode(true)} className=\"edit-btn\">\r\n                        <FaEdit /> Edit\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                'Select a file to preview'\r\n              )}\r\n            </h3>\r\n            {selectedFile && (\r\n              editMode ? (\r\n                <textarea\r\n                  className=\"file-content-editor\"\r\n                  value={fileContent}\r\n                  onChange={(e) => setFileContent(e.target.value)}\r\n                />\r\n              ) : (\r\n                <pre className=\"file-content\">{fileContent}</pre>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileExplorer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}